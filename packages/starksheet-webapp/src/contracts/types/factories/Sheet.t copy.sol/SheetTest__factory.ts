/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SheetTest,
  SheetTestInterface,
} from "../../Sheet.t copy.sol/SheetTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "log_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "val",
        type: "uint256[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256[]",
        name: "val",
        type: "int256[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "val",
        type: "address[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "log_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "log_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    name: "log_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "val",
        type: "address",
      },
    ],
    name: "log_named_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "val",
        type: "uint256[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256[]",
        name: "val",
        type: "int256[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "val",
        type: "address[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
    ],
    name: "log_named_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "val",
        type: "bytes32",
      },
    ],
    name: "log_named_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
    ],
    name: "log_named_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "val",
        type: "string",
      },
    ],
    name: "log_named_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "log_named_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "log_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "logs",
    type: "event",
  },
  {
    inputs: [],
    name: "IS_TEST",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "excludeArtifacts",
    outputs: [
      {
        internalType: "string[]",
        name: "excludedArtifacts_",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "excludeContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "excludedContracts_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "excludeSenders",
    outputs: [
      {
        internalType: "address[]",
        name: "excludedSenders_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "failed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sheet",
    outputs: [
      {
        internalType: "contract Sheet",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetArtifactSelectors",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "selectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct StdInvariant.FuzzSelector[]",
        name: "targetedArtifactSelectors_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetArtifacts",
    outputs: [
      {
        internalType: "string[]",
        name: "targetedArtifacts_",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "targetedContracts_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetSelectors",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "selectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct StdInvariant.FuzzSelector[]",
        name: "targetedSelectors_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "targetSenders",
    outputs: [
      {
        internalType: "address[]",
        name: "targetedSenders_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testGetCellShouldReturnEmptyIfNotExist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testSetCellShouldFailWhenNotOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testSetCellShouldMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "$a792e50881dbcbffce7826062cdb0978aa$__915063b5cdf92490611246908490600090600401611c48565b602060405180830381865af4158015611263573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112879190611c6a565b9998505050505050505050565b6040516001600160a01b0382166024820152610ed79060440160408051601f198184030181529190526020810180516001600160e01b031663161765e160e11b1790526113e7565b6001600160a01b0382166113265760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016104dd565b6000818152600360205260409020546001600160a01b03161561137c5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016104dd565b6001600160a01b038216600081815260046020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6001600160e01b031981168114610ed757600080fd5b60006020828403121561143057600080fd5b813561143b81611408565b9392505050565b60005b8381101561145d578181015183820152602001611445565b50506000910152565b6000815180845261147e816020860160208601611442565b601f01601f19169290920160200192915050565b60208152600061143b6020830184611466565b6000602082840312156114b757600080fd5b5035919050565b80356001600160a01b03811681146109f757600080fd5b600080604083850312156114e857600080fd5b6114f1836114be565b946020939093013593505050565b60018060a01b03841681528260208201526060604082015260006115266060830184611466565b95945050505050565b60008060006060848603121561154457600080fd5b61154d846114be565b925061155b602085016114be565b9150604084013590509250925092565b60006020828403121561157d57600080fd5b61143b826114be565b6000806040838503121561159957600080fd5b6115a2836114be565b9150602083013580151581146115b757600080fd5b809150509250929050565b60008083601f8401126115d457600080fd5b50813567ffffffffffffffff8111156115ec57600080fd5b60208301915083602082850101111561160457600080fd5b9250929050565b60008060008060006080868803121561162357600080fd5b61162c866114be565b945061163a602087016114be565b935060408601359250606086013567ffffffffffffffff81111561165d57600080fd5b611669888289016115c2565b969995985093965092949392505050565b6000806020838503121561168d57600080fd5b823567ffffffffffffffff8111156116a457600080fd5b6116b0858286016115c2565b90969095509350505050565b600080604083850312156116cf57600080fd5b6116d8836114be565b91506116e6602084016114be565b90509250929050565b60008060008060006080868803121561170757600080fd5b8535945061163a602087016114be565b600181811c9082168061172b57607f821691505b60208210810361174b57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561176357600080fd5b815161143b81611408565b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f85011683010190509695505050505050565b634e487b7160e01b600052604160045260246000fd5b601f82111561097657600081815260208120601f850160051c810160208610156117ff5750805b601f850160051c820191505b8181101561181e5782815560010161180b565b505050505050565b67ffffffffffffffff83111561183e5761183e6117c2565b6118528361184c8354611717565b836117d8565b6000601f841160018114611886576000851561186e5750838201355b600019600387901b1c1916600186901b178355610bcd565b600083815260209020601f19861690835b828110156118b75786850135825560209485019460019092019101611897565b50868210156118d45760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b838152600060208481840152606060408401526000845461190681611717565b8060608701526080600180841660008114611928576001811461194257611970565b60ff1985168984015283151560051b890183019550611970565b896000528660002060005b858110156119685781548b820186015290830190880161194d565b8a0184019650505b50939a9950505050505050505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156119a9576119a96117c2565b604052919050565b6000602082840312156119c357600080fd5b815167ffffffffffffffff808211156119db57600080fd5b818401915084601f8301126119ef57600080fd5b815181811115611a0157611a016117c2565b611a14601f8201601f1916602001611980565b9150808252856020828501011115611a2b57600080fd5b611a3c816020840160208601611442565b50949350505050565b815167ffffffffffffffff811115611a5f57611a5f6117c2565b611a7381611a6d8454611717565b846117d8565b602080601f831160018114611aa85760008415611a905750858301515b600019600386901b1c1916600185901b17855561181e565b600085815260208120601f198616915b82811015611ad757888601518255948401946001909101908401611ab8565b5085821015611af55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020808385031215611b1857600080fd5b825167ffffffffffffffff80821115611b3057600080fd5b818501915085601f830112611b4457600080fd5b815181811115611b5657611b566117c2565b8060051b9150611b67848301611980565b8181529183018401918481019088841115611b8157600080fd5b938501935b83851015611b9f57845182529385019390850190611b86565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600082611bde57634e487b7160e01b600052601260045260246000fd5b500690565b60008351611bf5818460208801611442565b9190910191825250602001919050565b600060018201611c2557634e487b7160e01b600052601160045260246000fd5b5060010190565b60008251611c3e818460208701611442565b9190910192915050565b604081526000611c5b6040830185611466565b90508260208301529392505050565b600060208284031215611c7c57600080fd5b505191905056fea264697066735822122054f5db9a7f46ff077960de08f23e7419d18add714083d77240ec896f3218a1c564736f6c6343000811003341304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50a2646970667358221220c0c451f3f23ecaba0a446875d5ba665c28f0b1962f3f3aaf4e066f798ccacda164736f6c63430008110033";

type SheetTestConstructorParams =
  | [linkLibraryAddresses: SheetTestLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SheetTestConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class SheetTest__factory extends ContractFactory {
  constructor(...args: SheetTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        SheetTest__factory.linkBytecode(linkLibraryAddresses),
        signer,
      );
    }
  }

  static linkBytecode(linkLibraryAddresses: SheetTestLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$a792e50881dbcbffce7826062cdb0978aa\\$__", "g"),
      linkLibraryAddresses[
        "lib/eth-projects-monorepo/packages/eth-projects-contracts/contracts/lib/utils/Bytes.sol:Bytes"
      ]
        .replace(/^0x/, "")
        .toLowerCase(),
    );

    return linkedBytecode;
  }

  override deploy(
    overrides?: Overrides & { from?: string },
  ): Promise<SheetTest> {
    return super.deploy(overrides || {}) as Promise<SheetTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SheetTest {
    return super.attach(address) as SheetTest;
  }
  override connect(signer: Signer): SheetTest__factory {
    return super.connect(signer) as SheetTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SheetTestInterface {
    return new utils.Interface(_abi) as SheetTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): SheetTest {
    return new Contract(address, _abi, signerOrProvider) as SheetTest;
  }
}

export interface SheetTestLibraryAddresses {
  ["lib/eth-projects-monorepo/packages/eth-projects-contracts/contracts/lib/utils/Bytes.sol:Bytes"]: string;
}
