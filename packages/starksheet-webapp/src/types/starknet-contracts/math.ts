/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Contract, Invocation, EstimateFeeResponse } from "starknet";
import type { BigNumberish } from "starknet/utils/number";
import type { BlockIdentifier } from "starknet/provider/utils";
import type BN from "bn.js";

export interface math extends Contract {
  sum(
    arr: BigNumberish[],
    options?: { blockIdentifier?: BlockIdentifier }
  ): Promise<[BN] & { res: BN }>;
  prod(
    arr: BigNumberish[],
    options?: { blockIdentifier?: BlockIdentifier }
  ): Promise<[BN] & { res: BN }>;
  div(
    arr: BigNumberish[],
    options?: { blockIdentifier?: BlockIdentifier }
  ): Promise<[BN] & { res: BN }>;
  sub(
    arr: BigNumberish[],
    options?: { blockIdentifier?: BlockIdentifier }
  ): Promise<[BN] & { res: BN }>;
  functions: {
    sum(
      arr: BigNumberish[],
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<[BN] & { res: BN }>;
    prod(
      arr: BigNumberish[],
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<[BN] & { res: BN }>;
    div(
      arr: BigNumberish[],
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<[BN] & { res: BN }>;
    sub(
      arr: BigNumberish[],
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<[BN] & { res: BN }>;
  };
  callStatic: {
    sum(
      arr: BigNumberish[],
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<[BN] & { res: BN }>;
    prod(
      arr: BigNumberish[],
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<[BN] & { res: BN }>;
    div(
      arr: BigNumberish[],
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<[BN] & { res: BN }>;
    sub(
      arr: BigNumberish[],
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<[BN] & { res: BN }>;
  };
  populateTransaction: {
    sum(
      arr: BigNumberish[],
      options?: { blockIdentifier?: BlockIdentifier }
    ): Invocation;
    prod(
      arr: BigNumberish[],
      options?: { blockIdentifier?: BlockIdentifier }
    ): Invocation;
    div(
      arr: BigNumberish[],
      options?: { blockIdentifier?: BlockIdentifier }
    ): Invocation;
    sub(
      arr: BigNumberish[],
      options?: { blockIdentifier?: BlockIdentifier }
    ): Invocation;
  };
  estimateFee: {
    sum(
      arr: BigNumberish[],
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<EstimateFeeResponse>;
    prod(
      arr: BigNumberish[],
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<EstimateFeeResponse>;
    div(
      arr: BigNumberish[],
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<EstimateFeeResponse>;
    sub(
      arr: BigNumberish[],
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<EstimateFeeResponse>;
  };
}
