/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Sheet, SheetInterface } from "../Sheet";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "NonExistantTokenError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "SetCellIsNotOwnerError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "CellUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "previousName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newName",
        type: "string",
      },
    ],
    name: "NameUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "previousSymbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newSymbol",
        type: "string",
      },
    ],
    name: "SymbolUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RC_BOUND",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cells",
    outputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getCell",
    outputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "renderCell",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
        ],
        internalType: "struct CellRendered",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renderer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint160",
        name: "contractAddress",
        type: "uint160",
      },
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "setCell",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newName",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newRender",
        type: "address",
      },
    ],
    name: "setRenderer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newSymbol",
        type: "string",
      },
    ],
    name: "setSymbol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051806040016040528060078152602001660536865657420360cc1b815250604051806040016040528060048152602001630534854360e41b81525062000069620000636200008f60201b60201c565b62000093565b600162000077838262000188565b50600262000086828262000188565b50505062000254565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200010e57607f821691505b6020821081036200012f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018357600081815260208120601f850160051c810160208610156200015e5750805b601f850160051c820191505b818110156200017f578281556001016200016a565b5050505b505050565b81516001600160401b03811115620001a457620001a4620000e3565b620001bc81620001b58454620000f9565b8462000135565b602080601f831160018114620001f45760008415620001db5750858301515b600019600386901b1c1916600185901b1785556200017f565b600085815260208120601f198616915b82811015620002255788860151825594840194600190910190840162000204565b5085821015620002445787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611f3680620002646000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063715018a6116100f9578063b88d4fde11610097578063c87b56dd11610071578063c87b56dd146103dc578063df4ca206146103ef578063e985e9c51461040f578063f2fde38b1461043d57600080fd5b8063b88d4fde146103ab578063b8c368ec146103be578063c47f0027146103c957600080fd5b80638da5cb5b116100d35780638da5cb5b1461036c57806395d89b411461037d578063a22cb46514610385578063b84c82461461039857600080fd5b8063715018a61461033e578063768d5029146103465780638ada6b0f1461035957600080fd5b8063206848f6116101665780634f6ccce7116101405780634f6ccce7146102e557806356d3163d146103055780636352211e1461031857806370a082311461032b57600080fd5b8063206848f6146102ac57806323b872dd146102bf57806342842e0e146102d257600080fd5b8063081812fc116101a2578063081812fc1461022b578063095ea7b31461026c57806318160ddd146102815780631941fd141461028a57600080fd5b806301ffc9a7146101c957806306fdde03146101f15780630715a24a14610206575b600080fd5b6101dc6101d73660046115c9565b610450565b60405190151581526020015b60405180910390f35b6101f96104a2565b6040516101e8919061163d565b61021d6fffffffffffffffffffffffffffffffff81565b6040519081526020016101e8565b610254610239366004611650565b6005602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101e8565b61027f61027a36600461167e565b610530565b005b61021d60075481565b61029d610298366004611650565b610617565b6040516101e8939291906116aa565b61029d6102ba366004611650565b6106cc565b61027f6102cd3660046116da565b6107ca565b61027f6102e03660046116da565b610991565b61021d6102f3366004611650565b60086020526000908152604090205481565b61027f61031336600461171b565b610a89565b610254610326366004611650565b610ab3565b61021d61033936600461171b565b610b0a565b61027f610b6d565b61027f610354366004611781565b610b81565b600954610254906001600160a01b031681565b6000546001600160a01b0316610254565b6101f9610cdf565b61027f6103933660046117eb565b610cec565b61027f6103a6366004611829565b610d58565b61027f6103b936600461186b565b610da9565b610254600160801b81565b61027f6103d7366004611829565b610e91565b6101f96103ea366004611650565b610ee2565b6104026103fd366004611650565b610fac565b6040516101e8919061189e565b6101dc61041d3660046118d5565b600660209081526000928352604080842090915290825290205460ff1681565b61027f61044b36600461171b565b611009565b60006301ffc9a760e01b6001600160e01b03198316148061048157506380ac58cd60e01b6001600160e01b03198316145b8061049c5750635b5e139f60e01b6001600160e01b03198316145b92915050565b600180546104af90611903565b80601f01602080910402602001604051908101604052809291908181526020018280546104db90611903565b80156105285780601f106104fd57610100808354040283529160200191610528565b820191906000526020600020905b81548152906001019060200180831161050b57829003601f168201915b505050505081565b6000818152600360205260409020546001600160a01b03163381148061057957506001600160a01b038116600090815260066020908152604080832033845290915290205460ff165b6105bb5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526005602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600a602052600090815260409020805460018201546002830180546001600160a01b0390931693919261064990611903565b80601f016020809104026020016040519081016040528092919081815260200182805461067590611903565b80156106c25780601f10610697576101008083540402835291602001916106c2565b820191906000526020600020905b8154815290600101906020018083116106a557829003601f168201915b5050505050905083565b60008181526003602052604081205481906060906001600160a01b03166106f957600160801b9250610714565b6000848152600a60205260409020546001600160a01b031692505b6000848152600a6020526040902060018101546002909101805485929190819061073d90611903565b80601f016020809104026020016040519081016040528092919081815260200182805461076990611903565b80156107b65780601f1061078b576101008083540402835291602001916107b6565b820191906000526020600020905b81548152906001019060200180831161079957829003601f168201915b505050505090509250925092509193909250565b6000818152600360205260409020546001600160a01b038481169116146108205760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016105b2565b6001600160a01b03821661086a5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016105b2565b336001600160a01b03841614806108a457506001600160a01b038316600090815260066020908152604080832033845290915290205460ff165b806108c557506000818152600560205260409020546001600160a01b031633145b6109025760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016105b2565b6001600160a01b0380841660008181526004602090815260408083208054600019019055938616808352848320805460010190558583526003825284832080546001600160a01b03199081168317909155600590925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b61099c8383836107ca565b6001600160a01b0382163b1580610a455750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a39919061193d565b6001600160e01b031916145b610a845760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016105b2565b505050565b610a91611082565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6000818152600360205260409020546001600160a01b031680610b055760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016105b2565b919050565b60006001600160a01b038216610b515760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016105b2565b506001600160a01b031660009081526004602052604090205490565b610b75611082565b610b7f60006110dc565b565b6000858152600360205260409020546001600160a01b0316610bd957610ba7328661112c565b60078054600090815260086020526040812087905581546001929190610bce908490611970565b90915550610c329050565b6000858152600360205260409020546001600160a01b03163214610c3257600085815260036020526040908190205490516324f3f02560e21b81526001600160a01b0390911660048201523260248201526044016105b2565b6040518060600160405280856001600160a01b0316815260200184815260200183838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250939094525050878152600a6020908152604091829020845181546001600160a01b0319166001600160a01b03909116178155908401516001820155908301519091506002820190610cd590826119e7565b5050505050505050565b600280546104af90611903565b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610d60611082565b7f8dca0271872d00b3de3abafca544c52fcd7d512dd852c9894fa2c118ac759a9360028383604051610d9493929190611b4d565b60405180910390a16002610a84828483611b7d565b610db48585856107ca565b6001600160a01b0384163b1580610e4b5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610dfc9033908a90899089908990600401611c3d565b6020604051808303816000875af1158015610e1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3f919061193d565b6001600160e01b031916145b610e8a5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016105b2565b5050505050565b610e99611082565b7fb65b7b5ea384affd30f77f842e057d29dd1b13f133adf69a724a8105b164ab7560018383604051610ecd93929190611b4d565b60405180910390a16001610a84828483611b7d565b6000818152600360205260409020546060906001600160a01b031680610f1e57604051630243d1a960e21b8152600481018490526024016105b2565b6000610f2984611237565b6009546040516328de0f2f60e01b81529192506001600160a01b0316906328de0f2f90610f5f9087908590600190600401611c7c565b600060405180830381865afa158015610f7c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610fa49190810190611cd8565b949350505050565b60408051606080820183526000808352602083018190529282015290610fd183611237565b6040805160608101825285815260009586526003602090815295829020546001600160a01b0316958101959095528401525090919050565b611011611082565b6001600160a01b0381166110765760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105b2565b61107f816110dc565b50565b6000546001600160a01b03163314610b7f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105b2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0382166111765760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016105b2565b6000818152600360205260409020546001600160a01b0316156111cc5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016105b2565b6001600160a01b038216600081815260046020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000818152600a6020908152604080832081516060818101845282546001600160a01b03168252600183015494820194909452600282018054949594919384019161128190611903565b80601f01602080910402602001604051908101604052809291908181526020018280546112ad90611903565b80156112fa5780601f106112cf576101008083540402835291602001916112fa565b820191906000526020600020905b8154815290600101906020018083116112dd57829003601f168201915b505050505081525050905061131c81516001600160a01b0316600160801b1490565b1561134f57602080820151604051611338920190815260200190565b604051602081830303815290604052915050919050565b8051600090600160801b6001600160a01b03909116101561140857600061138283600001516001600160a01b0316611237565b604051632d737e4960e21b815290915073__$a792e50881dbcbffce7826062cdb0978aa$__9063b5cdf924906113bf908490600090600401611d6c565b602060405180830381865af41580156113dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114009190611d8e565b91505061140c565b5080515b600082604001518060200190518101906114269190611da7565b9050606060005b82518110156114ff576000600284838151811061144c5761144c611e4d565b602002602001015161145e9190611e63565b60001490506000600185848151811061147957611479611e4d565b6020026020010151901c905081156114c5578361149582611237565b61149e90611e85565b6040516020016114af929190611ea9565b60405160208183030381529060405293506114ea565b6040516114d89085908390602001611ea9565b60405160208183030381529060405293505b505080806114f790611ecb565b91505061142d565b506000846020015190506000846001600160a01b03168284604051602401611527919061163d565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516115659190611ee4565b600060405180830381855afa9150503d80600081146115a0576040519150601f19603f3d011682016040523d82523d6000602084013e6115a5565b606091505b509998505050505050505050565b6001600160e01b03198116811461107f57600080fd5b6000602082840312156115db57600080fd5b81356115e6816115b3565b9392505050565b60005b838110156116085781810151838201526020016115f0565b50506000910152565b600081518084526116298160208601602086016115ed565b601f01601f19169290920160200192915050565b6020815260006115e66020830184611611565b60006020828403121561166257600080fd5b5035919050565b6001600160a01b038116811461107f57600080fd5b6000806040838503121561169157600080fd5b823561169c81611669565b946020939093013593505050565b60018060a01b03841681528260208201526060604082015260006116d16060830184611611565b95945050505050565b6000806000606084860312156116ef57600080fd5b83356116fa81611669565b9250602084013561170a81611669565b929592945050506040919091013590565b60006020828403121561172d57600080fd5b81356115e681611669565b60008083601f84011261174a57600080fd5b50813567ffffffffffffffff81111561176257600080fd5b60208301915083602082850101111561177a57600080fd5b9250929050565b60008060008060006080868803121561179957600080fd5b8535945060208601356117ab81611669565b935060408601359250606086013567ffffffffffffffff8111156117ce57600080fd5b6117da88828901611738565b969995985093965092949392505050565b600080604083850312156117fe57600080fd5b823561180981611669565b91506020830135801515811461181e57600080fd5b809150509250929050565b6000806020838503121561183c57600080fd5b823567ffffffffffffffff81111561185357600080fd5b61185f85828601611738565b90969095509350505050565b60008060008060006080868803121561188357600080fd5b853561188e81611669565b945060208601356117ab81611669565b602081528151602082015260018060a01b03602083015116604082015260006040830151606080840152610fa46080840182611611565b600080604083850312156118e857600080fd5b82356118f381611669565b9150602083013561181e81611669565b600181811c9082168061191757607f821691505b60208210810361193757634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561194f57600080fd5b81516115e6816115b3565b634e487b7160e01b600052601160045260246000fd5b8082018082111561049c5761049c61195a565b634e487b7160e01b600052604160045260246000fd5b601f821115610a8457600081815260208120601f850160051c810160208610156119c05750805b601f850160051c820191505b818110156119df578281556001016119cc565b505050505050565b815167ffffffffffffffff811115611a0157611a01611983565b611a1581611a0f8454611903565b84611999565b602080601f831160018114611a4a5760008415611a325750858301515b600019600386901b1c1916600185901b1785556119df565b600085815260208120601f198616915b82811015611a7957888601518255948401946001909101908401611a5a565b5085821015611a975787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008154611ab481611903565b808552602060018381168015611ad15760018114611aeb57611b19565b60ff1985168884015283151560051b880183019550611b19565b866000528260002060005b85811015611b115781548a8201860152908301908401611af6565b890184019650505b505050505092915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b604081526000611b606040830186611aa7565b8281036020840152611b73818587611b24565b9695505050505050565b67ffffffffffffffff831115611b9557611b95611983565b611ba983611ba38354611903565b83611999565b6000601f841160018114611bdd5760008515611bc55750838201355b600019600387901b1c1916600186901b178355610e8a565b600083815260209020601f19861690835b82811015611c0e5786850135825560209485019460019092019101611bee565b5086821015611c2b5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b6001600160a01b0386811682528516602082015260408101849052608060608201819052600090611c719083018486611b24565b979650505050505050565b838152606060208201526000611c956060830185611611565b8281036040840152611b738185611aa7565b604051601f8201601f1916810167ffffffffffffffff81118282101715611cd057611cd0611983565b604052919050565b600060208284031215611cea57600080fd5b815167ffffffffffffffff80821115611d0257600080fd5b818401915084601f830112611d1657600080fd5b815181811115611d2857611d28611983565b611d3b601f8201601f1916602001611ca7565b9150808252856020828501011115611d5257600080fd5b611d638160208401602086016115ed565b50949350505050565b604081526000611d7f6040830185611611565b90508260208301529392505050565b600060208284031215611da057600080fd5b5051919050565b60006020808385031215611dba57600080fd5b825167ffffffffffffffff80821115611dd257600080fd5b818501915085601f830112611de657600080fd5b815181811115611df857611df8611983565b8060051b9150611e09848301611ca7565b8181529183018401918481019088841115611e2357600080fd5b938501935b83851015611e4157845182529385019390850190611e28565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600082611e8057634e487b7160e01b600052601260045260246000fd5b500690565b805160208083015191908110156119375760001960209190910360031b1b16919050565b60008351611ebb8184602088016115ed565b9190910191825250602001919050565b600060018201611edd57611edd61195a565b5060010190565b60008251611ef68184602087016115ed565b919091019291505056fea26469706673582212201a777d38d19532d56564e885914b3b21953a01605f23003c91315e763431734364736f6c63430008110033";

type SheetConstructorParams =
  | [linkLibraryAddresses: SheetLibraryAddresses, signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SheetConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class Sheet__factory extends ContractFactory {
  constructor(...args: SheetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(_abi, Sheet__factory.linkBytecode(linkLibraryAddresses), signer);
    }
  }

  static linkBytecode(linkLibraryAddresses: SheetLibraryAddresses): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$a792e50881dbcbffce7826062cdb0978aa\\$__", "g"),
      linkLibraryAddresses[
        "lib/eth-projects-monorepo/packages/eth-projects-contracts/contracts/lib/utils/Bytes.sol:Bytes"
      ]
        .replace(/^0x/, "")
        .toLowerCase(),
    );

    return linkedBytecode;
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Sheet> {
    return super.deploy(overrides || {}) as Promise<Sheet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Sheet {
    return super.attach(address) as Sheet;
  }
  override connect(signer: Signer): Sheet__factory {
    return super.connect(signer) as Sheet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SheetInterface {
    return new utils.Interface(_abi) as SheetInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Sheet {
    return new Contract(address, _abi, signerOrProvider) as Sheet;
  }
}

export interface SheetLibraryAddresses {
  ["lib/eth-projects-monorepo/packages/eth-projects-contracts/contracts/lib/utils/Bytes.sol:Bytes"]: string;
}
