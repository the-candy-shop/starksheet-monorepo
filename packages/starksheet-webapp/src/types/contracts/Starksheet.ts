/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type BN from "bn.js";
import type {
  Contract,
  EstimateFeeResponse,
  GetTransactionResponse,
  Invocation,
  Overrides,
} from "starknet";
import type { BlockIdentifier } from "starknet/provider/utils";
import type { BigNumberish } from "starknet/utils/number";

export interface Starksheet extends Contract {
  setSheetDefaultRendererAddress(
    address: BigNumberish,
    options?: Overrides
  ): Promise<GetTransactionResponse>;
  getSheetDefaultRendererAddress(options?: {
    blockIdentifier?: BlockIdentifier;
  }): Promise<[BN] & { address: BN }>;
  setSheetClassHash(
    hash: BigNumberish,
    options?: Overrides
  ): Promise<GetTransactionResponse>;
  getSheetClassHash(options?: {
    blockIdentifier?: BlockIdentifier;
  }): Promise<[BN] & { hash: BN }>;
  setMerkleRoot(
    hash: BigNumberish,
    options?: Overrides
  ): Promise<GetTransactionResponse>;
  getMerkleRoot(options?: {
    blockIdentifier?: BlockIdentifier;
  }): Promise<[BN] & { hash: BN }>;
  getSheets(options?: {
    blockIdentifier?: BlockIdentifier;
  }): Promise<[BN[]] & { addresses: BN[] }>;
  getSheet(
    index: BigNumberish,
    options?: { blockIdentifier?: BlockIdentifier }
  ): Promise<[BN] & { address: BN }>;
  addSheet(
    name: BigNumberish,
    symbol: BigNumberish,
    proof: BigNumberish[],
    options?: Overrides
  ): Promise<GetTransactionResponse>;
  functions: {
    setSheetDefaultRendererAddress(
      address: BigNumberish,
      options?: Overrides
    ): Promise<GetTransactionResponse>;
    getSheetDefaultRendererAddress(options?: {
      blockIdentifier?: BlockIdentifier;
    }): Promise<[BN] & { address: BN }>;
    setSheetClassHash(
      hash: BigNumberish,
      options?: Overrides
    ): Promise<GetTransactionResponse>;
    getSheetClassHash(options?: {
      blockIdentifier?: BlockIdentifier;
    }): Promise<[BN] & { hash: BN }>;
    setMerkleRoot(
      hash: BigNumberish,
      options?: Overrides
    ): Promise<GetTransactionResponse>;
    getMerkleRoot(options?: {
      blockIdentifier?: BlockIdentifier;
    }): Promise<[BN] & { hash: BN }>;
    getSheets(options?: {
      blockIdentifier?: BlockIdentifier;
    }): Promise<[BN[]] & { addresses: BN[] }>;
    getSheet(
      index: BigNumberish,
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<[BN] & { address: BN }>;
    addSheet(
      name: BigNumberish,
      symbol: BigNumberish,
      proof: BigNumberish[],
      options?: Overrides
    ): Promise<GetTransactionResponse>;
  };
  callStatic: {
    setSheetDefaultRendererAddress(
      address: BigNumberish,
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<[] & {}>;
    getSheetDefaultRendererAddress(options?: {
      blockIdentifier?: BlockIdentifier;
    }): Promise<[BN] & { address: BN }>;
    setSheetClassHash(
      hash: BigNumberish,
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<[] & {}>;
    getSheetClassHash(options?: {
      blockIdentifier?: BlockIdentifier;
    }): Promise<[BN] & { hash: BN }>;
    setMerkleRoot(
      hash: BigNumberish,
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<[] & {}>;
    getMerkleRoot(options?: {
      blockIdentifier?: BlockIdentifier;
    }): Promise<[BN] & { hash: BN }>;
    getSheets(options?: {
      blockIdentifier?: BlockIdentifier;
    }): Promise<[BN[]] & { addresses: BN[] }>;
    getSheet(
      index: BigNumberish,
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<[BN] & { address: BN }>;
    addSheet(
      name: BigNumberish,
      symbol: BigNumberish,
      proof: BigNumberish[],
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<[BN] & { address: BN }>;
  };
  populateTransaction: {
    setSheetDefaultRendererAddress(
      address: BigNumberish,
      options?: Overrides
    ): Invocation;
    getSheetDefaultRendererAddress(options?: {
      blockIdentifier?: BlockIdentifier;
    }): Invocation;
    setSheetClassHash(hash: BigNumberish, options?: Overrides): Invocation;
    getSheetClassHash(options?: {
      blockIdentifier?: BlockIdentifier;
    }): Invocation;
    setMerkleRoot(hash: BigNumberish, options?: Overrides): Invocation;
    getMerkleRoot(options?: { blockIdentifier?: BlockIdentifier }): Invocation;
    getSheets(options?: { blockIdentifier?: BlockIdentifier }): Invocation;
    getSheet(
      index: BigNumberish,
      options?: { blockIdentifier?: BlockIdentifier }
    ): Invocation;
    addSheet(
      name: BigNumberish,
      symbol: BigNumberish,
      proof: BigNumberish[],
      options?: Overrides
    ): Invocation;
  };
  estimateFee: {
    setSheetDefaultRendererAddress(
      address: BigNumberish,
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<EstimateFeeResponse>;
    getSheetDefaultRendererAddress(options?: {
      blockIdentifier?: BlockIdentifier;
    }): Promise<EstimateFeeResponse>;
    setSheetClassHash(
      hash: BigNumberish,
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<EstimateFeeResponse>;
    getSheetClassHash(options?: {
      blockIdentifier?: BlockIdentifier;
    }): Promise<EstimateFeeResponse>;
    setMerkleRoot(
      hash: BigNumberish,
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<EstimateFeeResponse>;
    getMerkleRoot(options?: {
      blockIdentifier?: BlockIdentifier;
    }): Promise<EstimateFeeResponse>;
    getSheets(options?: {
      blockIdentifier?: BlockIdentifier;
    }): Promise<EstimateFeeResponse>;
    getSheet(
      index: BigNumberish,
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<EstimateFeeResponse>;
    addSheet(
      name: BigNumberish,
      symbol: BigNumberish,
      proof: BigNumberish[],
      options?: { blockIdentifier?: BlockIdentifier }
    ): Promise<EstimateFeeResponse>;
  };
}
