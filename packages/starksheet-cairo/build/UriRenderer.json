{
  "abi": [
    {
      "data": [
        {
          "name": "previousOwner",
          "type": "felt"
        },
        {
          "name": "newOwner",
          "type": "felt"
        }
      ],
      "keys": [],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getUseTokenId",
      "outputs": [
        {
          "name": "res",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "use",
          "type": "felt"
        }
      ],
      "name": "setUseTokenId",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "name": "owner",
          "type": "felt"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "new_owner",
          "type": "felt"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "owner",
          "type": "felt"
        },
        {
          "name": "base_uri_len",
          "type": "felt"
        },
        {
          "name": "base_uri",
          "type": "felt*"
        }
      ],
      "name": "constructor",
      "outputs": [],
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getBaseUri",
      "outputs": [
        {
          "name": "base_uri_len",
          "type": "felt"
        },
        {
          "name": "base_uri",
          "type": "felt*"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "base_uri_len",
          "type": "felt"
        },
        {
          "name": "base_uri",
          "type": "felt*"
        }
      ],
      "name": "setBaseUri",
      "outputs": [],
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "token_id",
          "type": "felt"
        },
        {
          "name": "value",
          "type": "felt"
        },
        {
          "name": "name",
          "type": "felt"
        }
      ],
      "name": "token_uri",
      "outputs": [
        {
          "name": "token_uri_len",
          "type": "felt"
        },
        {
          "name": "token_uri",
          "type": "felt*"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "entry_points_by_type": {
    "CONSTRUCTOR": [
      {
        "offset": "0x270",
        "selector": "0x28ffe4ff0f226a9107253e17a904099aa4f63a02a5621de0576e5aa71bc5194"
      }
    ],
    "EXTERNAL": [
      {
        "offset": "0x1fb",
        "selector": "0x3cfa2f36761218ff8ed49d6fc1d29e7c184b999ec7be4d6bf29078394932f"
      },
      {
        "offset": "0x24a",
        "selector": "0x14a390f291e2e1f29874769efdef47ddad94d76f77ff516fad206a385e8995f"
      },
      {
        "offset": "0x2d5",
        "selector": "0x15820a317a978514ad042ea1e0ed9c72b7358efba8486e1352031ca9eea3814"
      },
      {
        "offset": "0x338",
        "selector": "0x226ad7e84c1fe08eb4c525ed93cccadf9517670341304571e66f7c4f95cbe54"
      },
      {
        "offset": "0x234",
        "selector": "0x266623c84ac264056e7e0926e35de090cc02e13da956962ff63d60d7c1edce7"
      },
      {
        "offset": "0x2b3",
        "selector": "0x30f430c6416bbed9251bed3586b0ad0b5c1f9b9e9c7eaa29374df7b724e40f6"
      },
      {
        "offset": "0x213",
        "selector": "0x3fadc85665c9cdbacb921f1f535aefb9a745165cd86a5450e3d8b0398832174"
      }
    ],
    "L1_HANDLER": []
  },
  "program": {
    "attributes": [
      {
        "accessible_scopes": [
          "openzeppelin.access.ownable.library",
          "openzeppelin.access.ownable.library.Ownable",
          "openzeppelin.access.ownable.library.Ownable.assert_only_owner"
        ],
        "end_pc": 254,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 22,
            "offset": 6
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 252,
        "value": "Ownable: caller is the zero address"
      },
      {
        "accessible_scopes": [
          "openzeppelin.access.ownable.library",
          "openzeppelin.access.ownable.library.Ownable",
          "openzeppelin.access.ownable.library.Ownable.assert_only_owner"
        ],
        "end_pc": 255,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 22,
            "offset": 8
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 254,
        "value": "Ownable: caller is not the owner"
      },
      {
        "accessible_scopes": [
          "openzeppelin.access.ownable.library",
          "openzeppelin.access.ownable.library.Ownable",
          "openzeppelin.access.ownable.library.Ownable.transfer_ownership"
        ],
        "end_pc": 268,
        "flow_tracking_data": {
          "ap_tracking": {
            "group": 24,
            "offset": 0
          },
          "reference_ids": {}
        },
        "name": "error_message",
        "start_pc": 265,
        "value": "Ownable: new owner is the zero address"
      }
    ],
    "builtins": [
      "pedersen",
      "range_check"
    ],
    "compiler_version": "0.11.2",
    "data": [
      "0x40780017fff7fff",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x400380007ffb7ffc",
      "0x400380017ffb7ffd",
      "0x482680017ffb8000",
      "0x3",
      "0x480280027ffb8000",
      "0x208b7fff7fff7ffe",
      "0x20780017fff7ffd",
      "0x3",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480080007fff8000",
      "0x400080007ffd7fff",
      "0x482480017ffd8001",
      "0x1",
      "0x482480017ffd8001",
      "0x1",
      "0xa0680017fff7ffe",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
      "0x402a7ffc7ffd7fff",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x47657443616c6c657241646472657373",
      "0x400280007ffd7fff",
      "0x482680017ffd8000",
      "0x2",
      "0x480280017ffd8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x53746f7261676552656164",
      "0x400280007ffc7fff",
      "0x400380017ffc7ffd",
      "0x482680017ffc8000",
      "0x3",
      "0x480280027ffc8000",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x53746f726167655772697465",
      "0x400280007ffb7fff",
      "0x400380017ffb7ffc",
      "0x400380027ffb7ffd",
      "0x482680017ffb8000",
      "0x3",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x456d69744576656e74",
      "0x400280007ff97fff",
      "0x400380017ff97ffa",
      "0x400380027ff97ffb",
      "0x400380037ff97ffc",
      "0x400380047ff97ffd",
      "0x482680017ff98000",
      "0x5",
      "0x208b7fff7fff7ffe",
      "0x20780017fff7ffd",
      "0x4",
      "0x400780017fff7ffd",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x400380007ffc7ffd",
      "0x482680017ffc8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x48297ffc80007ffd",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffb",
      "0x208b7fff7fff7ffe",
      "0x480680017fff8000",
      "0x3ffffffffffffffffffffffffffffff",
      "0x480280017ffc8000",
      "0x48307fff80007ffe",
      "0x400280027ffc7fff",
      "0x480280017ffc8000",
      "0x484480017fff8000",
      "0x100000000000000000000000000000000",
      "0x480280007ffc8000",
      "0x40317fff7ffe7ffd",
      "0x482680017ffc8000",
      "0x3",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x20680017fff7fff",
      "0x8",
      "0x482680017ffc8000",
      "0x1",
      "0x484680017ffd8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x400280007ffc7fff",
      "0x208b7fff7fff7ffe",
      "0x400380007ffc7ffd",
      "0x482680017ffc8000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x20780017fff7ffd",
      "0x8",
      "0x40780017fff7fff",
      "0x2",
      "0x480a7ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x20680017fff7fff",
      "0xa",
      "0x484680017ffd8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x400280007ffc7fff",
      "0x482680017ffc8000",
      "0x1",
      "0x480680017fff8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x400380007ffc7ffd",
      "0x482680017ffc8000",
      "0x1",
      "0x480680017fff8000",
      "0x1",
      "0x208b7fff7fff7ffe",
      "0x482680017ffb8000",
      "0x2",
      "0x480280007ffb8000",
      "0x482680017ffd8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffbf",
      "0x480280017ffb8000",
      "0x48487ffd7fff8000",
      "0x480280007ffb8000",
      "0x40317fff7ffe7ffc",
      "0x48127ffc7fff8000",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x20680017fff7fff",
      "0x10",
      "0x480a7ffc7fff8000",
      "0x482680017ffd8000",
      "0x11000000000000000000000000000000000000000000000101",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffb3",
      "0x480680017fff8000",
      "0x800000000000011000000000000000000000000000000000000000000000000",
      "0x48127ffe7fff8000",
      "0x48287ffd80007ffe",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffad",
      "0x482680017ffd8000",
      "0x11000000000000000000000000000000000000000000000101",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x20680017fff7fff",
      "0xc",
      "0x40780017fff7fff",
      "0xa",
      "0x480680017fff8000",
      "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeff",
      "0x480a7ffc7fff8000",
      "0x48287ffd80007ffe",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9e",
      "0x10780017fff7fff",
      "0x8",
      "0x40780017fff7fff",
      "0xb",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff96",
      "0x480a7ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff49",
      "0x40137fff7fff8000",
      "0x480680017fff8000",
      "0x1390fd803c110ac71730ece1decfc34eb1d0088e295d4f1b125dda1e0c5b9ff",
      "0x4002800080007fff",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff43",
      "0x40137fff7fff8001",
      "0x4003800080017ffc",
      "0x4003800180017ffd",
      "0x4826800180018000",
      "0x2",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x1",
      "0x480a80007fff8000",
      "0x4828800180007ffc",
      "0x480a80017fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff65",
      "0x480a7ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x2bd557f4ba80dfabefabe45e9b2dd35db1b9a78e96c72bc2b69b655ce47a930",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff46",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff40",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x24",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0xc",
      "0x48127ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff1f",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff3e",
      "0x40127ffd7fff7ff7",
      "0x48127ffc7fff8000",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffcf",
      "0x208b7fff7fff7ffe",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff30",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x3",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffec",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffc4",
      "0x48127ffd7fff8000",
      "0x48127ffe7fff8000",
      "0x48127fe77fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff93",
      "0x48127ffe7fff8000",
      "0x48127fe37fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x20780017fff7ffd",
      "0x6",
      "0x480a7ffc7fff8000",
      "0x480680017fff8000",
      "0x30",
      "0x208b7fff7fff7ffe",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffecf",
      "0x40137fff7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff1e",
      "0x480680017fff8000",
      "0x0",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0x1c",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff24",
      "0x482480017fff8000",
      "0x1",
      "0x20680017fff7fff",
      "0x6",
      "0x400780017fff8001",
      "0x2d",
      "0x10780017fff7fff",
      "0x4",
      "0x400780017fff8001",
      "0x0",
      "0x48127ffd7fff8000",
      "0x480a80017fff8000",
      "0x48127ff47fff8000",
      "0x480a80007fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x1104800180018000",
      "0x1f",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x30",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x0",
      "0x20780017fff7ffb",
      "0x5",
      "0x480a7ffa7fff8000",
      "0x480a7ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480680017fff8000",
      "0xa",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff1d",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x482a7ffc7ffd8000",
      "0x400080007fff7ffe",
      "0x48127ff97fff8000",
      "0x48127ff97fff8000",
      "0x482680017ffc8000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffeb",
      "0x208b7fff7fff7ffe",
      "0x48297ffb80007ffd",
      "0x20680017fff7fff",
      "0x5",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x208b7fff7fff7ffe",
      "0x484680017ffa8000",
      "0x100",
      "0x482680017ffd8000",
      "0x1",
      "0x48317fff80007ffb",
      "0x48327fff7ffc8000",
      "0x480080007fff8000",
      "0x480a7ff97fff8000",
      "0x48307ffe7ffa8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x482680017ffd8000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x1ff6de8ab581879bdc87f543fc73a60efdbd320e6f374522be941553b7779c",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe8e",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe88",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x3ca214cea5fad2c75073b6c434cd5b8943e1852806d860d0d2c5cd3b7b263aa",
      "0x208b7fff7fff7ffe",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffffa",
      "0x480a7ffb7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe70",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffed",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe6a",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480680017fff8000",
      "0x4c468d7776dd5d0f44514b8a62aa358cfe58a02a520db46cd30134338fe5db",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe3d",
      "0x480a7ffc7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec4",
      "0x48127fe17fff8000",
      "0x48127ffd7fff8000",
      "0x48127ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff0",
      "0x480a7ffa7fff8000",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe48",
      "0x48127ffe7fff8000",
      "0x48127ff57fff8000",
      "0x48127ff57fff8000",
      "0x48127ffc7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
      "0x480a7ff97fff8000",
      "0x48127ffe7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe41",
      "0x48127ff67fff8000",
      "0x48127ff67fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff9e",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffee8",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff8a",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffedc",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x4003800080007ffc",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffd7fff8000",
      "0x4828800080007ffe",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x402b7ffd7ffc7ffd",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x48127ffe7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff1",
      "0x48127ff47fff8000",
      "0x48127ff47fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffec3",
      "0x208b7fff7fff7ffe",
      "0x482680017ffd8000",
      "0x1",
      "0x402a7ffd7ffc7fff",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffff3",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe8e",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff55",
      "0x480680017fff8000",
      "0x0",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0xe7",
      "0x480680017fff8000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff2d",
      "0x208b7fff7fff7ffe",
      "0x480280027ffb8000",
      "0x480280017ffd8000",
      "0x400080007ffe7fff",
      "0x482680017ffd8000",
      "0x2",
      "0x480280017ffd8000",
      "0x48307fff7ffe8000",
      "0x402a7ffd7ffc7fff",
      "0x480280027ffb8000",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x482480017ffd8000",
      "0x1",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x482680017ffd8000",
      "0x2",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffdc",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd73",
      "0x40137fff7fff8000",
      "0x480a7ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0xcf",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffff0f",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x3",
      "0x4003800080007ffb",
      "0x400380007ffd7ffb",
      "0x402780017ffd8001",
      "0x1",
      "0x4826800180008000",
      "0x1",
      "0x40297ffb7fff8002",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffc7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd5d",
      "0x480a80017fff8000",
      "0x4829800080008002",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x402b7ffd7ffc7ffd",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x480280027ffb8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffd4",
      "0x40137ffb7fff8000",
      "0x40137ffc7fff8001",
      "0x48127ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe3",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe2c",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeec",
      "0x480680017fff8000",
      "0x0",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x7e",
      "0x208b7fff7fff7ffe",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x400080007ffe7fff",
      "0x482680017ffd8000",
      "0x1",
      "0x480280007ffd8000",
      "0x48307fff7ffe8000",
      "0x402a7ffd7ffc7fff",
      "0x480280027ffb8000",
      "0x480280007ffb8000",
      "0x480280017ffb8000",
      "0x482480017ffd8000",
      "0x1",
      "0x480280007ffd8000",
      "0x482680017ffd8000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe2",
      "0x40780017fff7fff",
      "0x1",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x5",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffd0f",
      "0x40137fff7fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ff87fff8000",
      "0x480a7ffa7fff8000",
      "0x480680017fff8000",
      "0x0",
      "0x480a80007fff8000",
      "0x1104800180018000",
      "0x6b",
      "0x40137fff7fff8001",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffeaa",
      "0x40137fff7fff8002",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe86",
      "0x40137ffd7fff8003",
      "0x40137ffc7fff8004",
      "0x20680017fff7fff",
      "0x8",
      "0x480a80037fff8000",
      "0x480a80047fff8000",
      "0x48127ffc7fff8000",
      "0x480a80027fff8000",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x48127ffe7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe16",
      "0x480680017fff8000",
      "0x2f",
      "0x4002800080017fff",
      "0x4002800180017ffe",
      "0x480680017fff8000",
      "0x2e6a736f6e",
      "0x4002800280017fff",
      "0x480a80037fff8000",
      "0x480a80047fff8000",
      "0x48127ffa7fff8000",
      "0x4826800180028000",
      "0x3",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x3",
      "0x4003800080007ffb",
      "0x400380007ffd7ffb",
      "0x402780017ffd8001",
      "0x1",
      "0x4826800180008000",
      "0x1",
      "0x40297ffb7fff8002",
      "0x4826800180008000",
      "0x1",
      "0x480a7ffc7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffcd8",
      "0x480a80017fff8000",
      "0x4829800080008002",
      "0x480a80007fff8000",
      "0x208b7fff7fff7ffe",
      "0x40780017fff7fff",
      "0x2",
      "0x482680017ffd8000",
      "0x3",
      "0x402a7ffd7ffc7fff",
      "0x480280017ffb8000",
      "0x480280007ffb8000",
      "0x480280027ffb8000",
      "0x480280007ffd8000",
      "0x480280017ffd8000",
      "0x480280027ffd8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffae",
      "0x40137ffc7fff8000",
      "0x40137ffb7fff8001",
      "0x48127ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffde",
      "0x480a80007fff8000",
      "0x480a80017fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x208b7fff7fff7ffe",
      "0x48297ffc80007ffb",
      "0x20680017fff7fff",
      "0x6",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x208b7fff7fff7ffe",
      "0x482a7ffb7ffd8000",
      "0x480a7ff87fff8000",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x480080007ffb8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe83",
      "0x482680017ffb8000",
      "0x1",
      "0x480a7ffc7fff8000",
      "0x480a7ffd7fff8000",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffee",
      "0x208b7fff7fff7ffe",
      "0x480a7ff97fff8000",
      "0x480a7ffa7fff8000",
      "0x480a7ffb7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe42",
      "0x48317fff80007ffc",
      "0x20680017fff7fff",
      "0x7",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffd7fff8000",
      "0x208b7fff7fff7ffe",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x48127ffb7fff8000",
      "0x480a7ffc7fff8000",
      "0x1104800180018000",
      "0x800000000000010fffffffffffffffffffffffffffffffffffffffffffffe5b",
      "0x400280007ffd7fff",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x48127ffc7fff8000",
      "0x482680017ffc8000",
      "0x1",
      "0x482680017ffd8000",
      "0x1",
      "0x1104800180018000",
      "0x800000000000010ffffffffffffffffffffffffffffffffffffffffffffffe6",
      "0x208b7fff7fff7ffe"
    ],
    "debug_info": null,
    "hints": {
      "0": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.alloc",
            "starkware.cairo.common.alloc.alloc"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 0,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "12": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.memcpy",
            "starkware.cairo.common.memcpy.memcpy"
          ],
          "code": "vm_enter_scope({'n': ids.len})",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 2,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.memcpy.memcpy.len": 0
            }
          }
        }
      ],
      "20": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.memcpy",
            "starkware.cairo.common.memcpy.memcpy"
          ],
          "code": "n -= 1\nids.continue_copying = 1 if n > 0 else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 2,
              "offset": 5
            },
            "reference_ids": {
              "starkware.cairo.common.memcpy.memcpy.continue_copying": 1
            }
          }
        }
      ],
      "23": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.memcpy",
            "starkware.cairo.common.memcpy.memcpy"
          ],
          "code": "vm_exit_scope()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 2,
              "offset": 6
            },
            "reference_ids": {}
          }
        }
      ],
      "27": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.get_caller_address"
          ],
          "code": "syscall_handler.get_caller_address(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 3,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": 2
            }
          }
        }
      ],
      "35": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.storage_read"
          ],
          "code": "syscall_handler.storage_read(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 4,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.storage_read.syscall_ptr": 3
            }
          }
        }
      ],
      "44": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.storage_write"
          ],
          "code": "syscall_handler.storage_write(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 5,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.storage_write.syscall_ptr": 4
            }
          }
        }
      ],
      "54": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.syscalls",
            "starkware.starknet.common.syscalls.emit_event"
          ],
          "code": "syscall_handler.emit_event(segments=segments, syscall_ptr=ids.syscall_ptr)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 6,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.syscalls.emit_event.syscall_ptr": 5
            }
          }
        }
      ],
      "57": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_not_zero"
          ],
          "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.value)\nassert ids.value % PRIME != 0, f'assert_not_zero failed: {ids.value} = 0.'",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 7,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_not_zero.value": 6
            }
          }
        }
      ],
      "62": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_nn"
          ],
          "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.a)\nassert 0 <= ids.a % PRIME < range_check_builtin.bound, f'a = {ids.a} is out of range.'",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 8,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_nn.a": 7
            }
          }
        }
      ],
      "71": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.assert_250_bit"
          ],
          "code": "from starkware.cairo.common.math_utils import as_int\n\n# Correctness check.\nvalue = as_int(ids.value, PRIME) % PRIME\nassert value < ids.UPPER_BOUND, f'{value} is outside of the range [0, 2**250).'\n\n# Calculation for the assertion.\nids.high, ids.low = divmod(ids.value, ids.SHIFT)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 10,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math.assert_250_bit.high": 10,
              "starkware.cairo.common.math.assert_250_bit.low": 9,
              "starkware.cairo.common.math.assert_250_bit.value": 8
            }
          }
        }
      ],
      "86": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.abs_value"
          ],
          "code": "from starkware.cairo.common.math_utils import is_positive\nids.is_positive = 1 if is_positive(\n    value=ids.value, prime=PRIME, rc_bound=range_check_builtin.bound) else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 11,
              "offset": 1
            },
            "reference_ids": {
              "starkware.cairo.common.math.abs_value.is_positive": 12,
              "starkware.cairo.common.math.abs_value.value": 11
            }
          }
        }
      ],
      "109": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.sign"
          ],
          "code": "from starkware.cairo.common.math_utils import is_positive\nids.is_positive = 1 if is_positive(\n    value=ids.value, prime=PRIME, rc_bound=range_check_builtin.bound) else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 12,
              "offset": 1
            },
            "reference_ids": {
              "starkware.cairo.common.math.sign.is_positive": 14,
              "starkware.cairo.common.math.sign.value": 13
            }
          }
        }
      ],
      "127": [
        {
          "accessible_scopes": [
            "starkware.cairo.common.math",
            "starkware.cairo.common.math.unsigned_div_rem"
          ],
          "code": "from starkware.cairo.common.math_utils import assert_integer\nassert_integer(ids.div)\nassert 0 < ids.div <= PRIME // range_check_builtin.bound, \\\n    f'div={hex(ids.div)} is out of the valid range.'\nids.q, ids.r = divmod(ids.value, ids.div)",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 13,
              "offset": 0
            },
            "reference_ids": {
              "starkware.cairo.common.math.unsigned_div_rem.div": 16,
              "starkware.cairo.common.math.unsigned_div_rem.q": 18,
              "starkware.cairo.common.math.unsigned_div_rem.r": 17,
              "starkware.cairo.common.math.unsigned_div_rem.value": 15
            }
          }
        }
      ],
      "144": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.storage",
            "starkware.starknet.common.storage.normalize_address"
          ],
          "code": "# Verify the assumptions on the relationship between 2**250, ADDR_BOUND and PRIME.\nADDR_BOUND = ids.ADDR_BOUND % PRIME\nassert (2**250 < ADDR_BOUND <= 2**251) and (2 * 2**250 < PRIME) and (\n        ADDR_BOUND * 2 > PRIME), \\\n    'normalize_address() cannot be used with the current constants.'\nids.is_small = 1 if ids.addr < ADDR_BOUND else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 14,
              "offset": 1
            },
            "reference_ids": {
              "starkware.starknet.common.storage.normalize_address.addr": 19,
              "starkware.starknet.common.storage.normalize_address.is_small": 20
            }
          }
        }
      ],
      "162": [
        {
          "accessible_scopes": [
            "starkware.starknet.common.storage",
            "starkware.starknet.common.storage.normalize_address"
          ],
          "code": "ids.is_250 = 1 if ids.addr < 2**250 else 0",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 14,
              "offset": 2
            },
            "reference_ids": {
              "starkware.starknet.common.storage.normalize_address.addr": 19,
              "starkware.starknet.common.storage.normalize_address.is_250": 21
            }
          }
        }
      ],
      "498": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.getUseTokenId_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 46,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "540": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.setUseTokenId"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 51,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "555": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.getOwner_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 53,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "595": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.transferOwnership"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 58,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "643": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.constructor"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 63,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "672": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.getBaseUri_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 66,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "743": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.setBaseUri"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 75,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ],
      "805": [
        {
          "accessible_scopes": [
            "__main__",
            "__main__",
            "__wrappers__",
            "__wrappers__.token_uri_encode_return"
          ],
          "code": "memory[ap] = segments.add()",
          "flow_tracking_data": {
            "ap_tracking": {
              "group": 79,
              "offset": 0
            },
            "reference_ids": {}
          }
        }
      ]
    },
    "identifiers": {
      "__main__.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "__main__.Ownable": {
        "destination": "openzeppelin.access.ownable.library.Ownable",
        "type": "alias"
      },
      "__main__._base_uri": {
        "type": "namespace"
      },
      "__main__._base_uri.Args": {
        "full_name": "__main__._base_uri.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__._base_uri.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "__main__._base_uri.ImplicitArgs": {
        "full_name": "__main__._base_uri.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__._base_uri.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__._base_uri.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__._base_uri.addr": {
        "decorators": [],
        "pc": 451,
        "type": "function"
      },
      "__main__._base_uri.addr.Args": {
        "full_name": "__main__._base_uri.addr.Args",
        "members": {
          "index": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "__main__._base_uri.addr.ImplicitArgs": {
        "full_name": "__main__._base_uri.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__main__._base_uri.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "__main__._base_uri.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__._base_uri.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "__main__._base_uri.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "__main__._base_uri.read": {
        "decorators": [],
        "pc": 465,
        "type": "function"
      },
      "__main__._base_uri.read.Args": {
        "full_name": "__main__._base_uri.read.Args",
        "members": {
          "index": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "__main__._base_uri.read.ImplicitArgs": {
        "full_name": "__main__._base_uri.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__._base_uri.read.Return": {
        "cairo_type": "(value: felt)",
        "type": "type_definition"
      },
      "__main__._base_uri.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__._base_uri.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "__main__._base_uri.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "__main__._base_uri.write": {
        "decorators": [],
        "pc": 479,
        "type": "function"
      },
      "__main__._base_uri.write.Args": {
        "full_name": "__main__._base_uri.write.Args",
        "members": {
          "index": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__main__._base_uri.write.ImplicitArgs": {
        "full_name": "__main__._base_uri.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__._base_uri.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__._base_uri.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__._base_uri_len": {
        "type": "namespace"
      },
      "__main__._base_uri_len.Args": {
        "full_name": "__main__._base_uri_len.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__._base_uri_len.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "__main__._base_uri_len.ImplicitArgs": {
        "full_name": "__main__._base_uri_len.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__._base_uri_len.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__._base_uri_len.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__._base_uri_len.addr": {
        "decorators": [],
        "pc": 421,
        "type": "function"
      },
      "__main__._base_uri_len.addr.Args": {
        "full_name": "__main__._base_uri_len.addr.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__._base_uri_len.addr.ImplicitArgs": {
        "full_name": "__main__._base_uri_len.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__main__._base_uri_len.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "__main__._base_uri_len.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__._base_uri_len.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "__main__._base_uri_len.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "__main__._base_uri_len.read": {
        "decorators": [],
        "pc": 426,
        "type": "function"
      },
      "__main__._base_uri_len.read.Args": {
        "full_name": "__main__._base_uri_len.read.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__._base_uri_len.read.ImplicitArgs": {
        "full_name": "__main__._base_uri_len.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__._base_uri_len.read.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "__main__._base_uri_len.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__._base_uri_len.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "__main__._base_uri_len.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "__main__._base_uri_len.write": {
        "decorators": [],
        "pc": 439,
        "type": "function"
      },
      "__main__._base_uri_len.write.Args": {
        "full_name": "__main__._base_uri_len.write.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "__main__._base_uri_len.write.ImplicitArgs": {
        "full_name": "__main__._base_uri_len.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__._base_uri_len.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__._base_uri_len.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__._base_uri_read": {
        "decorators": [],
        "pc": 870,
        "type": "function"
      },
      "__main__._base_uri_read.Args": {
        "full_name": "__main__._base_uri_read.Args",
        "members": {
          "base_uri": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "index": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__main__._base_uri_read.ImplicitArgs": {
        "full_name": "__main__._base_uri_read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__._base_uri_read.Return": {
        "cairo_type": "(base_uri: felt*)",
        "type": "type_definition"
      },
      "__main__._base_uri_read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__._base_uri_write": {
        "decorators": [],
        "pc": 848,
        "type": "function"
      },
      "__main__._base_uri_write.Args": {
        "full_name": "__main__._base_uri_write.Args",
        "members": {
          "base_uri": {
            "cairo_type": "felt*",
            "offset": 2
          },
          "base_uri_len": {
            "cairo_type": "felt",
            "offset": 1
          },
          "index": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__._base_uri_write.ImplicitArgs": {
        "full_name": "__main__._base_uri_write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__._base_uri_write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__._base_uri_write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__._use_token_id": {
        "type": "namespace"
      },
      "__main__._use_token_id.Args": {
        "full_name": "__main__._use_token_id.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__._use_token_id.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "__main__._use_token_id.ImplicitArgs": {
        "full_name": "__main__._use_token_id.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__._use_token_id.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__._use_token_id.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__._use_token_id.addr": {
        "decorators": [],
        "pc": 391,
        "type": "function"
      },
      "__main__._use_token_id.addr.Args": {
        "full_name": "__main__._use_token_id.addr.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__._use_token_id.addr.ImplicitArgs": {
        "full_name": "__main__._use_token_id.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__main__._use_token_id.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "__main__._use_token_id.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__._use_token_id.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "__main__._use_token_id.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "__main__._use_token_id.read": {
        "decorators": [],
        "pc": 396,
        "type": "function"
      },
      "__main__._use_token_id.read.Args": {
        "full_name": "__main__._use_token_id.read.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__._use_token_id.read.ImplicitArgs": {
        "full_name": "__main__._use_token_id.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__._use_token_id.read.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "__main__._use_token_id.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__._use_token_id.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "__main__._use_token_id.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "__main__._use_token_id.write": {
        "decorators": [],
        "pc": 409,
        "type": "function"
      },
      "__main__._use_token_id.write.Args": {
        "full_name": "__main__._use_token_id.write.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "__main__._use_token_id.write.ImplicitArgs": {
        "full_name": "__main__._use_token_id.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__._use_token_id.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__._use_token_id.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "__main__.constructor": {
        "decorators": [
          "constructor"
        ],
        "pc": 604,
        "type": "function"
      },
      "__main__.constructor.Args": {
        "full_name": "__main__.constructor.Args",
        "members": {
          "base_uri": {
            "cairo_type": "felt*",
            "offset": 2
          },
          "base_uri_len": {
            "cairo_type": "felt",
            "offset": 1
          },
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.constructor.ImplicitArgs": {
        "full_name": "__main__.constructor.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.constructor.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.constructor.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.getBaseUri": {
        "decorators": [
          "view"
        ],
        "pc": 652,
        "type": "function"
      },
      "__main__.getBaseUri.Args": {
        "full_name": "__main__.getBaseUri.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__.getBaseUri.ImplicitArgs": {
        "full_name": "__main__.getBaseUri.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.getBaseUri.Return": {
        "cairo_type": "(base_uri_len: felt, base_uri: felt*)",
        "type": "type_definition"
      },
      "__main__.getBaseUri.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__main__.getOwner": {
        "decorators": [
          "view"
        ],
        "pc": 549,
        "type": "function"
      },
      "__main__.getOwner.Args": {
        "full_name": "__main__.getOwner.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__.getOwner.ImplicitArgs": {
        "full_name": "__main__.getOwner.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.getOwner.Return": {
        "cairo_type": "(owner: felt)",
        "type": "type_definition"
      },
      "__main__.getOwner.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.getUseTokenId": {
        "decorators": [
          "view"
        ],
        "pc": 492,
        "type": "function"
      },
      "__main__.getUseTokenId.Args": {
        "full_name": "__main__.getUseTokenId.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__main__.getUseTokenId.ImplicitArgs": {
        "full_name": "__main__.getUseTokenId.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.getUseTokenId.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "__main__.getUseTokenId.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.get_caller_address": {
        "destination": "starkware.starknet.common.syscalls.get_caller_address",
        "type": "alias"
      },
      "__main__.setBaseUri": {
        "decorators": [
          "external"
        ],
        "pc": 710,
        "type": "function"
      },
      "__main__.setBaseUri.Args": {
        "full_name": "__main__.setBaseUri.Args",
        "members": {
          "base_uri": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "base_uri_len": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__main__.setBaseUri.ImplicitArgs": {
        "full_name": "__main__.setBaseUri.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.setBaseUri.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.setBaseUri.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.setUseTokenId": {
        "decorators": [
          "external"
        ],
        "pc": 522,
        "type": "function"
      },
      "__main__.setUseTokenId.Args": {
        "full_name": "__main__.setUseTokenId.Args",
        "members": {
          "use": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "__main__.setUseTokenId.ImplicitArgs": {
        "full_name": "__main__.setUseTokenId.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.setUseTokenId.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.setUseTokenId.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__main__.str": {
        "destination": "utils.string.str",
        "type": "alias"
      },
      "__main__.token_uri": {
        "decorators": [
          "view"
        ],
        "pc": 752,
        "type": "function"
      },
      "__main__.token_uri.Args": {
        "full_name": "__main__.token_uri.Args",
        "members": {
          "name": {
            "cairo_type": "felt",
            "offset": 2
          },
          "token_id": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.token_uri.ImplicitArgs": {
        "full_name": "__main__.token_uri.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.token_uri.Return": {
        "cairo_type": "(token_uri_len: felt, token_uri: felt*)",
        "type": "type_definition"
      },
      "__main__.token_uri.SIZEOF_LOCALS": {
        "type": "const",
        "value": 5
      },
      "__main__.transferOwnership": {
        "decorators": [
          "external"
        ],
        "pc": 579,
        "type": "function"
      },
      "__main__.transferOwnership.Args": {
        "full_name": "__main__.transferOwnership.Args",
        "members": {
          "new_owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "__main__.transferOwnership.ImplicitArgs": {
        "full_name": "__main__.transferOwnership.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__main__.transferOwnership.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "__main__.transferOwnership.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.constructor": {
        "decorators": [
          "constructor"
        ],
        "pc": 624,
        "type": "function"
      },
      "__wrappers__.constructor.Args": {
        "full_name": "__wrappers__.constructor.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.constructor.ImplicitArgs": {
        "full_name": "__wrappers__.constructor.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.constructor.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.constructor.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.constructor.__wrapped_func": {
        "destination": "__main__.constructor",
        "type": "alias"
      },
      "__wrappers__.constructor_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.getBaseUri": {
        "decorators": [
          "view"
        ],
        "pc": 691,
        "type": "function"
      },
      "__wrappers__.getBaseUri.Args": {
        "full_name": "__wrappers__.getBaseUri.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.getBaseUri.ImplicitArgs": {
        "full_name": "__wrappers__.getBaseUri.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.getBaseUri.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.getBaseUri.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "__wrappers__.getBaseUri.__wrapped_func": {
        "destination": "__main__.getBaseUri",
        "type": "alias"
      },
      "__wrappers__.getBaseUri_encode_return": {
        "decorators": [],
        "pc": 672,
        "type": "function"
      },
      "__wrappers__.getBaseUri_encode_return.Args": {
        "full_name": "__wrappers__.getBaseUri_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "ret_value": {
            "cairo_type": "(base_uri_len: felt, base_uri: felt*)",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__wrappers__.getBaseUri_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.getBaseUri_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.getBaseUri_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.getBaseUri_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 3
      },
      "__wrappers__.getBaseUri_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.getOwner": {
        "decorators": [
          "view"
        ],
        "pc": 564,
        "type": "function"
      },
      "__wrappers__.getOwner.Args": {
        "full_name": "__wrappers__.getOwner.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.getOwner.ImplicitArgs": {
        "full_name": "__wrappers__.getOwner.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.getOwner.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.getOwner.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.getOwner.__wrapped_func": {
        "destination": "__main__.getOwner",
        "type": "alias"
      },
      "__wrappers__.getOwner_encode_return": {
        "decorators": [],
        "pc": 555,
        "type": "function"
      },
      "__wrappers__.getOwner_encode_return.Args": {
        "full_name": "__wrappers__.getOwner_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(owner: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.getOwner_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.getOwner_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.getOwner_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.getOwner_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.getOwner_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.getUseTokenId": {
        "decorators": [
          "view"
        ],
        "pc": 507,
        "type": "function"
      },
      "__wrappers__.getUseTokenId.Args": {
        "full_name": "__wrappers__.getUseTokenId.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.getUseTokenId.ImplicitArgs": {
        "full_name": "__wrappers__.getUseTokenId.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.getUseTokenId.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.getUseTokenId.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.getUseTokenId.__wrapped_func": {
        "destination": "__main__.getUseTokenId",
        "type": "alias"
      },
      "__wrappers__.getUseTokenId_encode_return": {
        "decorators": [],
        "pc": 498,
        "type": "function"
      },
      "__wrappers__.getUseTokenId_encode_return.Args": {
        "full_name": "__wrappers__.getUseTokenId_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "ret_value": {
            "cairo_type": "(res: felt)",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "__wrappers__.getUseTokenId_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.getUseTokenId_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.getUseTokenId_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.getUseTokenId_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 1
      },
      "__wrappers__.getUseTokenId_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.setBaseUri": {
        "decorators": [
          "external"
        ],
        "pc": 725,
        "type": "function"
      },
      "__wrappers__.setBaseUri.Args": {
        "full_name": "__wrappers__.setBaseUri.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.setBaseUri.ImplicitArgs": {
        "full_name": "__wrappers__.setBaseUri.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.setBaseUri.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.setBaseUri.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.setBaseUri.__wrapped_func": {
        "destination": "__main__.setBaseUri",
        "type": "alias"
      },
      "__wrappers__.setBaseUri_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.setUseTokenId": {
        "decorators": [
          "external"
        ],
        "pc": 531,
        "type": "function"
      },
      "__wrappers__.setUseTokenId.Args": {
        "full_name": "__wrappers__.setUseTokenId.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.setUseTokenId.ImplicitArgs": {
        "full_name": "__wrappers__.setUseTokenId.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.setUseTokenId.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.setUseTokenId.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.setUseTokenId.__wrapped_func": {
        "destination": "__main__.setUseTokenId",
        "type": "alias"
      },
      "__wrappers__.setUseTokenId_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.token_uri": {
        "decorators": [
          "view"
        ],
        "pc": 824,
        "type": "function"
      },
      "__wrappers__.token_uri.Args": {
        "full_name": "__wrappers__.token_uri.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.token_uri.ImplicitArgs": {
        "full_name": "__wrappers__.token_uri.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.token_uri.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.token_uri.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "__wrappers__.token_uri.__wrapped_func": {
        "destination": "__main__.token_uri",
        "type": "alias"
      },
      "__wrappers__.token_uri_encode_return": {
        "decorators": [],
        "pc": 805,
        "type": "function"
      },
      "__wrappers__.token_uri_encode_return.Args": {
        "full_name": "__wrappers__.token_uri_encode_return.Args",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "ret_value": {
            "cairo_type": "(token_uri_len: felt, token_uri: felt*)",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "__wrappers__.token_uri_encode_return.ImplicitArgs": {
        "full_name": "__wrappers__.token_uri_encode_return.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.token_uri_encode_return.Return": {
        "cairo_type": "(range_check_ptr: felt, data_len: felt, data: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.token_uri_encode_return.SIZEOF_LOCALS": {
        "type": "const",
        "value": 3
      },
      "__wrappers__.token_uri_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "__wrappers__.transferOwnership": {
        "decorators": [
          "external"
        ],
        "pc": 586,
        "type": "function"
      },
      "__wrappers__.transferOwnership.Args": {
        "full_name": "__wrappers__.transferOwnership.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.transferOwnership.ImplicitArgs": {
        "full_name": "__wrappers__.transferOwnership.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "__wrappers__.transferOwnership.Return": {
        "cairo_type": "(syscall_ptr: felt*, pedersen_ptr: starkware.cairo.common.cairo_builtins.HashBuiltin*, range_check_ptr: felt, size: felt, retdata: felt*)",
        "type": "type_definition"
      },
      "__wrappers__.transferOwnership.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "__wrappers__.transferOwnership.__wrapped_func": {
        "destination": "__main__.transferOwnership",
        "type": "alias"
      },
      "__wrappers__.transferOwnership_encode_return.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.Ownable": {
        "type": "namespace"
      },
      "openzeppelin.access.ownable.library.Ownable.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable._transfer_ownership": {
        "decorators": [],
        "pc": 277,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.Ownable._transfer_ownership.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable._transfer_ownership.Args",
        "members": {
          "new_owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable._transfer_ownership.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable._transfer_ownership.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable._transfer_ownership.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable._transfer_ownership.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable.assert_only_owner": {
        "decorators": [],
        "pc": 244,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.Ownable.assert_only_owner.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.assert_only_owner.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.assert_only_owner.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.assert_only_owner.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.assert_only_owner.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable.assert_only_owner.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable.initializer": {
        "decorators": [],
        "pc": 237,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.Ownable.initializer.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.initializer.Args",
        "members": {
          "owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.initializer.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.initializer.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.initializer.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable.initializer.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable.owner": {
        "decorators": [],
        "pc": 259,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.Ownable.owner.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.owner.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.owner.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.owner.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.owner.Return": {
        "cairo_type": "(owner: felt)",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable.owner.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable.transfer_ownership": {
        "decorators": [],
        "pc": 265,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.Ownable.transfer_ownership.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.transfer_ownership.Args",
        "members": {
          "new_owner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.transfer_ownership.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable.transfer_ownership.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable.transfer_ownership.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable.transfer_ownership.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable_owner": {
        "type": "namespace"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable_owner.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable_owner.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable_owner.addr": {
        "decorators": [],
        "pc": 207,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.addr.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable_owner.addr.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.addr.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable_owner.addr.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.addr.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.addr.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable_owner.hash2": {
        "destination": "starkware.cairo.common.hash.hash2",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.normalize_address": {
        "destination": "starkware.starknet.common.storage.normalize_address",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.read": {
        "decorators": [],
        "pc": 212,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.read.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable_owner.read.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.read.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable_owner.read.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.read.Return": {
        "cairo_type": "(owner: felt)",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.Ownable_owner.storage_read": {
        "destination": "starkware.starknet.common.syscalls.storage_read",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.storage_write": {
        "destination": "starkware.starknet.common.syscalls.storage_write",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.write": {
        "decorators": [],
        "pc": 225,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.write.Args": {
        "full_name": "openzeppelin.access.ownable.library.Ownable_owner.write.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.write.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.Ownable_owner.write.ImplicitArgs",
        "members": {
          "pedersen_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 1
          },
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 2
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.Ownable_owner.write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred": {
        "type": "namespace"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.Args": {
        "full_name": "openzeppelin.access.ownable.library.OwnershipTransferred.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.OwnershipTransferred.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.SELECTOR": {
        "type": "const",
        "value": 553132481214675521502977957974509639062080100631756862105218886163371506175
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.emit": {
        "decorators": [],
        "pc": 182,
        "type": "function"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.emit.Args": {
        "full_name": "openzeppelin.access.ownable.library.OwnershipTransferred.emit.Args",
        "members": {
          "newOwner": {
            "cairo_type": "felt",
            "offset": 1
          },
          "previousOwner": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.emit.ImplicitArgs": {
        "full_name": "openzeppelin.access.ownable.library.OwnershipTransferred.emit.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 1
          },
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.emit.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.emit.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.emit_event": {
        "destination": "starkware.starknet.common.syscalls.emit_event",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.OwnershipTransferred.memcpy": {
        "destination": "starkware.cairo.common.memcpy.memcpy",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.assert_not_zero": {
        "destination": "starkware.cairo.common.math.assert_not_zero",
        "type": "alias"
      },
      "openzeppelin.access.ownable.library.get_caller_address": {
        "destination": "starkware.starknet.common.syscalls.get_caller_address",
        "type": "alias"
      },
      "starkware.cairo.common.alloc.alloc": {
        "decorators": [],
        "pc": 0,
        "type": "function"
      },
      "starkware.cairo.common.alloc.alloc.Args": {
        "full_name": "starkware.cairo.common.alloc.alloc.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.cairo.common.alloc.alloc.ImplicitArgs": {
        "full_name": "starkware.cairo.common.alloc.alloc.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.cairo.common.alloc.alloc.Return": {
        "cairo_type": "(ptr: felt*)",
        "type": "type_definition"
      },
      "starkware.cairo.common.alloc.alloc.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.bool.FALSE": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.bool.TRUE": {
        "type": "const",
        "value": 1
      },
      "starkware.cairo.common.cairo_builtins.BitwiseBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.BitwiseBuiltin",
        "members": {
          "x": {
            "cairo_type": "felt",
            "offset": 0
          },
          "x_and_y": {
            "cairo_type": "felt",
            "offset": 2
          },
          "x_or_y": {
            "cairo_type": "felt",
            "offset": 4
          },
          "x_xor_y": {
            "cairo_type": "felt",
            "offset": 3
          },
          "y": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 5,
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.EcOpBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.EcOpBuiltin",
        "members": {
          "m": {
            "cairo_type": "felt",
            "offset": 4
          },
          "p": {
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
            "offset": 0
          },
          "q": {
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
            "offset": 2
          },
          "r": {
            "cairo_type": "starkware.cairo.common.ec_point.EcPoint",
            "offset": 5
          }
        },
        "size": 7,
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.EcPoint": {
        "destination": "starkware.cairo.common.ec_point.EcPoint",
        "type": "alias"
      },
      "starkware.cairo.common.cairo_builtins.HashBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "members": {
          "result": {
            "cairo_type": "felt",
            "offset": 2
          },
          "x": {
            "cairo_type": "felt",
            "offset": 0
          },
          "y": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.KeccakBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.KeccakBuiltin",
        "members": {
          "input": {
            "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
            "offset": 0
          },
          "output": {
            "cairo_type": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
            "offset": 8
          }
        },
        "size": 16,
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.KeccakBuiltinState": {
        "destination": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
        "type": "alias"
      },
      "starkware.cairo.common.cairo_builtins.PoseidonBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.PoseidonBuiltin",
        "members": {
          "input": {
            "cairo_type": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
            "offset": 0
          },
          "output": {
            "cairo_type": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
            "offset": 3
          }
        },
        "size": 6,
        "type": "struct"
      },
      "starkware.cairo.common.cairo_builtins.PoseidonBuiltinState": {
        "destination": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
        "type": "alias"
      },
      "starkware.cairo.common.cairo_builtins.SignatureBuiltin": {
        "full_name": "starkware.cairo.common.cairo_builtins.SignatureBuiltin",
        "members": {
          "message": {
            "cairo_type": "felt",
            "offset": 1
          },
          "pub_key": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.dict_access.DictAccess": {
        "full_name": "starkware.cairo.common.dict_access.DictAccess",
        "members": {
          "key": {
            "cairo_type": "felt",
            "offset": 0
          },
          "new_value": {
            "cairo_type": "felt",
            "offset": 2
          },
          "prev_value": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.cairo.common.ec_point.EcPoint": {
        "full_name": "starkware.cairo.common.ec_point.EcPoint",
        "members": {
          "x": {
            "cairo_type": "felt",
            "offset": 0
          },
          "y": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.hash.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "starkware.cairo.common.hash.hash2": {
        "decorators": [],
        "pc": 3,
        "type": "function"
      },
      "starkware.cairo.common.hash.hash2.Args": {
        "full_name": "starkware.cairo.common.hash.hash2.Args",
        "members": {
          "x": {
            "cairo_type": "felt",
            "offset": 0
          },
          "y": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.hash.hash2.ImplicitArgs": {
        "full_name": "starkware.cairo.common.hash.hash2.ImplicitArgs",
        "members": {
          "hash_ptr": {
            "cairo_type": "starkware.cairo.common.cairo_builtins.HashBuiltin*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.hash.hash2.Return": {
        "cairo_type": "(result: felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.hash.hash2.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.keccak_state.KeccakBuiltinState": {
        "full_name": "starkware.cairo.common.keccak_state.KeccakBuiltinState",
        "members": {
          "s0": {
            "cairo_type": "felt",
            "offset": 0
          },
          "s1": {
            "cairo_type": "felt",
            "offset": 1
          },
          "s2": {
            "cairo_type": "felt",
            "offset": 2
          },
          "s3": {
            "cairo_type": "felt",
            "offset": 3
          },
          "s4": {
            "cairo_type": "felt",
            "offset": 4
          },
          "s5": {
            "cairo_type": "felt",
            "offset": 5
          },
          "s6": {
            "cairo_type": "felt",
            "offset": 6
          },
          "s7": {
            "cairo_type": "felt",
            "offset": 7
          }
        },
        "size": 8,
        "type": "struct"
      },
      "starkware.cairo.common.math.FALSE": {
        "destination": "starkware.cairo.common.bool.FALSE",
        "type": "alias"
      },
      "starkware.cairo.common.math.TRUE": {
        "destination": "starkware.cairo.common.bool.TRUE",
        "type": "alias"
      },
      "starkware.cairo.common.math.abs_value": {
        "decorators": [
          "known_ap_change"
        ],
        "pc": 84,
        "type": "function"
      },
      "starkware.cairo.common.math.abs_value.Args": {
        "full_name": "starkware.cairo.common.math.abs_value.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.abs_value.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.abs_value.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.abs_value.Return": {
        "cairo_type": "felt",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.abs_value.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.abs_value.is_positive": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.abs_value.is_positive",
        "references": [
          {
            "ap_tracking_data": {
              "group": 11,
              "offset": 1
            },
            "pc": 86,
            "value": "[cast(ap + (-1), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.abs_value.value": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.abs_value.value",
        "references": [
          {
            "ap_tracking_data": {
              "group": 11,
              "offset": 0
            },
            "pc": 84,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_250_bit": {
        "decorators": [
          "known_ap_change"
        ],
        "pc": 71,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_250_bit.Args": {
        "full_name": "starkware.cairo.common.math.assert_250_bit.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_250_bit.HIGH_BOUND": {
        "type": "const",
        "value": 5316911983139663491615228241121378304
      },
      "starkware.cairo.common.math.assert_250_bit.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_250_bit.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_250_bit.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_250_bit.SHIFT": {
        "type": "const",
        "value": 340282366920938463463374607431768211456
      },
      "starkware.cairo.common.math.assert_250_bit.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_250_bit.UPPER_BOUND": {
        "type": "const",
        "value": 1809251394333065553493296640760748560207343510400633813116524750123642650624
      },
      "starkware.cairo.common.math.assert_250_bit.high": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_250_bit.high",
        "references": [
          {
            "ap_tracking_data": {
              "group": 10,
              "offset": 0
            },
            "pc": 71,
            "value": "[cast([fp + (-4)] + 1, felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_250_bit.low": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_250_bit.low",
        "references": [
          {
            "ap_tracking_data": {
              "group": 10,
              "offset": 0
            },
            "pc": 71,
            "value": "[cast([fp + (-4)], felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_250_bit.value": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_250_bit.value",
        "references": [
          {
            "ap_tracking_data": {
              "group": 10,
              "offset": 0
            },
            "pc": 71,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_le": {
        "decorators": [],
        "pc": 66,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_le.Args": {
        "full_name": "starkware.cairo.common.math.assert_le.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          },
          "b": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_le.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_le.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_le.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_le.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_nn": {
        "decorators": [],
        "pc": 62,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_nn.Args": {
        "full_name": "starkware.cairo.common.math.assert_nn.Args",
        "members": {
          "a": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_nn.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_nn.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_nn.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_nn.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_nn.a": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_nn.a",
        "references": [
          {
            "ap_tracking_data": {
              "group": 8,
              "offset": 0
            },
            "pc": 62,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.assert_not_zero": {
        "decorators": [],
        "pc": 57,
        "type": "function"
      },
      "starkware.cairo.common.math.assert_not_zero.Args": {
        "full_name": "starkware.cairo.common.math.assert_not_zero.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_not_zero.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.assert_not_zero.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.cairo.common.math.assert_not_zero.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.assert_not_zero.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.assert_not_zero.value": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.assert_not_zero.value",
        "references": [
          {
            "ap_tracking_data": {
              "group": 7,
              "offset": 0
            },
            "pc": 57,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.sign": {
        "decorators": [
          "known_ap_change"
        ],
        "pc": 99,
        "type": "function"
      },
      "starkware.cairo.common.math.sign.Args": {
        "full_name": "starkware.cairo.common.math.sign.Args",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.sign.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.sign.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.sign.Return": {
        "cairo_type": "felt",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.sign.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.sign.is_positive": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.sign.is_positive",
        "references": [
          {
            "ap_tracking_data": {
              "group": 12,
              "offset": 1
            },
            "pc": 109,
            "value": "[cast(ap + (-1), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.sign.value": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.sign.value",
        "references": [
          {
            "ap_tracking_data": {
              "group": 12,
              "offset": 0
            },
            "pc": 99,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.unsigned_div_rem": {
        "decorators": [],
        "pc": 127,
        "type": "function"
      },
      "starkware.cairo.common.math.unsigned_div_rem.Args": {
        "full_name": "starkware.cairo.common.math.unsigned_div_rem.Args",
        "members": {
          "div": {
            "cairo_type": "felt",
            "offset": 1
          },
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.math.unsigned_div_rem.ImplicitArgs": {
        "full_name": "starkware.cairo.common.math.unsigned_div_rem.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.cairo.common.math.unsigned_div_rem.Return": {
        "cairo_type": "(q: felt, r: felt)",
        "type": "type_definition"
      },
      "starkware.cairo.common.math.unsigned_div_rem.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.math.unsigned_div_rem.div": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.unsigned_div_rem.div",
        "references": [
          {
            "ap_tracking_data": {
              "group": 13,
              "offset": 0
            },
            "pc": 127,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.unsigned_div_rem.q": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.unsigned_div_rem.q",
        "references": [
          {
            "ap_tracking_data": {
              "group": 13,
              "offset": 0
            },
            "pc": 127,
            "value": "[cast([fp + (-5)] + 1, felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.unsigned_div_rem.r": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.unsigned_div_rem.r",
        "references": [
          {
            "ap_tracking_data": {
              "group": 13,
              "offset": 0
            },
            "pc": 127,
            "value": "[cast([fp + (-5)], felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math.unsigned_div_rem.value": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.math.unsigned_div_rem.value",
        "references": [
          {
            "ap_tracking_data": {
              "group": 13,
              "offset": 0
            },
            "pc": 127,
            "value": "[cast(fp + (-4), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.math_cmp.RC_BOUND": {
        "type": "const",
        "value": 340282366920938463463374607431768211456
      },
      "starkware.cairo.common.math_cmp.assert_le_felt": {
        "destination": "starkware.cairo.common.math.assert_le_felt",
        "type": "alias"
      },
      "starkware.cairo.common.math_cmp.assert_lt_felt": {
        "destination": "starkware.cairo.common.math.assert_lt_felt",
        "type": "alias"
      },
      "starkware.cairo.common.memcpy.memcpy": {
        "decorators": [],
        "pc": 9,
        "type": "function"
      },
      "starkware.cairo.common.memcpy.memcpy.Args": {
        "full_name": "starkware.cairo.common.memcpy.memcpy.Args",
        "members": {
          "dst": {
            "cairo_type": "felt*",
            "offset": 0
          },
          "len": {
            "cairo_type": "felt",
            "offset": 2
          },
          "src": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.cairo.common.memcpy.memcpy.ImplicitArgs": {
        "full_name": "starkware.cairo.common.memcpy.memcpy.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.cairo.common.memcpy.memcpy.LoopFrame": {
        "full_name": "starkware.cairo.common.memcpy.memcpy.LoopFrame",
        "members": {
          "dst": {
            "cairo_type": "felt*",
            "offset": 0
          },
          "src": {
            "cairo_type": "felt*",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.cairo.common.memcpy.memcpy.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.cairo.common.memcpy.memcpy.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.cairo.common.memcpy.memcpy.continue_copying": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.memcpy.memcpy.continue_copying",
        "references": [
          {
            "ap_tracking_data": {
              "group": 2,
              "offset": 3
            },
            "pc": 16,
            "value": "[cast(ap, felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.memcpy.memcpy.len": {
        "cairo_type": "felt",
        "full_name": "starkware.cairo.common.memcpy.memcpy.len",
        "references": [
          {
            "ap_tracking_data": {
              "group": 2,
              "offset": 0
            },
            "pc": 9,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.cairo.common.memcpy.memcpy.loop": {
        "pc": 14,
        "type": "label"
      },
      "starkware.cairo.common.poseidon_state.PoseidonBuiltinState": {
        "full_name": "starkware.cairo.common.poseidon_state.PoseidonBuiltinState",
        "members": {
          "s0": {
            "cairo_type": "felt",
            "offset": 0
          },
          "s1": {
            "cairo_type": "felt",
            "offset": 1
          },
          "s2": {
            "cairo_type": "felt",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.starknet.common.storage.ADDR_BOUND": {
        "type": "const",
        "value": -106710729501573572985208420194530329073740042555888586719489
      },
      "starkware.starknet.common.storage.MAX_STORAGE_ITEM_SIZE": {
        "type": "const",
        "value": 256
      },
      "starkware.starknet.common.storage.assert_250_bit": {
        "destination": "starkware.cairo.common.math.assert_250_bit",
        "type": "alias"
      },
      "starkware.starknet.common.storage.normalize_address": {
        "decorators": [
          "known_ap_change"
        ],
        "pc": 142,
        "type": "function"
      },
      "starkware.starknet.common.storage.normalize_address.Args": {
        "full_name": "starkware.starknet.common.storage.normalize_address.Args",
        "members": {
          "addr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.storage.normalize_address.ImplicitArgs": {
        "full_name": "starkware.starknet.common.storage.normalize_address.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.storage.normalize_address.Return": {
        "cairo_type": "(res: felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.storage.normalize_address.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.storage.normalize_address.addr": {
        "cairo_type": "felt",
        "full_name": "starkware.starknet.common.storage.normalize_address.addr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 14,
              "offset": 0
            },
            "pc": 142,
            "value": "[cast(fp + (-3), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.storage.normalize_address.is_250": {
        "cairo_type": "felt",
        "full_name": "starkware.starknet.common.storage.normalize_address.is_250",
        "references": [
          {
            "ap_tracking_data": {
              "group": 14,
              "offset": 2
            },
            "pc": 162,
            "value": "[cast(ap + (-1), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.storage.normalize_address.is_small": {
        "cairo_type": "felt",
        "full_name": "starkware.starknet.common.storage.normalize_address.is_small",
        "references": [
          {
            "ap_tracking_data": {
              "group": 14,
              "offset": 1
            },
            "pc": 144,
            "value": "[cast(ap + (-1), felt*)]"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.CALL_CONTRACT_SELECTOR": {
        "type": "const",
        "value": 20853273475220472486191784820
      },
      "starkware.starknet.common.syscalls.CallContract": {
        "full_name": "starkware.starknet.common.syscalls.CallContract",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.CallContractRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
            "offset": 5
          }
        },
        "size": 7,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.CallContractRequest": {
        "full_name": "starkware.starknet.common.syscalls.CallContractRequest",
        "members": {
          "calldata": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "calldata_size": {
            "cairo_type": "felt",
            "offset": 3
          },
          "contract_address": {
            "cairo_type": "felt",
            "offset": 1
          },
          "function_selector": {
            "cairo_type": "felt",
            "offset": 2
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 5,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.CallContractResponse": {
        "full_name": "starkware.starknet.common.syscalls.CallContractResponse",
        "members": {
          "retdata": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "retdata_size": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DELEGATE_CALL_SELECTOR": {
        "type": "const",
        "value": 21167594061783206823196716140
      },
      "starkware.starknet.common.syscalls.DELEGATE_L1_HANDLER_SELECTOR": {
        "type": "const",
        "value": 23274015802972845247556842986379118667122
      },
      "starkware.starknet.common.syscalls.DEPLOY_SELECTOR": {
        "type": "const",
        "value": 75202468540281
      },
      "starkware.starknet.common.syscalls.Deploy": {
        "full_name": "starkware.starknet.common.syscalls.Deploy",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.DeployRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.DeployResponse",
            "offset": 6
          }
        },
        "size": 9,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DeployRequest": {
        "full_name": "starkware.starknet.common.syscalls.DeployRequest",
        "members": {
          "class_hash": {
            "cairo_type": "felt",
            "offset": 1
          },
          "constructor_calldata": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "constructor_calldata_size": {
            "cairo_type": "felt",
            "offset": 3
          },
          "contract_address_salt": {
            "cairo_type": "felt",
            "offset": 2
          },
          "deploy_from_zero": {
            "cairo_type": "felt",
            "offset": 5
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 6,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DeployResponse": {
        "full_name": "starkware.starknet.common.syscalls.DeployResponse",
        "members": {
          "constructor_retdata": {
            "cairo_type": "felt*",
            "offset": 2
          },
          "constructor_retdata_size": {
            "cairo_type": "felt",
            "offset": 1
          },
          "contract_address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.DictAccess": {
        "destination": "starkware.cairo.common.dict_access.DictAccess",
        "type": "alias"
      },
      "starkware.starknet.common.syscalls.EMIT_EVENT_SELECTOR": {
        "type": "const",
        "value": 1280709301550335749748
      },
      "starkware.starknet.common.syscalls.EmitEvent": {
        "full_name": "starkware.starknet.common.syscalls.EmitEvent",
        "members": {
          "data": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 3
          },
          "keys": {
            "cairo_type": "felt*",
            "offset": 2
          },
          "keys_len": {
            "cairo_type": "felt",
            "offset": 1
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 5,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GET_BLOCK_NUMBER_SELECTOR": {
        "type": "const",
        "value": 1448089106835523001438702345020786
      },
      "starkware.starknet.common.syscalls.GET_BLOCK_TIMESTAMP_SELECTOR": {
        "type": "const",
        "value": 24294903732626645868215235778792757751152
      },
      "starkware.starknet.common.syscalls.GET_CALLER_ADDRESS_SELECTOR": {
        "type": "const",
        "value": 94901967781393078444254803017658102643
      },
      "starkware.starknet.common.syscalls.GET_CONTRACT_ADDRESS_SELECTOR": {
        "type": "const",
        "value": 6219495360805491471215297013070624192820083
      },
      "starkware.starknet.common.syscalls.GET_SEQUENCER_ADDRESS_SELECTOR": {
        "type": "const",
        "value": 1592190833581991703053805829594610833820054387
      },
      "starkware.starknet.common.syscalls.GET_TX_INFO_SELECTOR": {
        "type": "const",
        "value": 1317029390204112103023
      },
      "starkware.starknet.common.syscalls.GET_TX_SIGNATURE_SELECTOR": {
        "type": "const",
        "value": 1448089128652340074717162277007973
      },
      "starkware.starknet.common.syscalls.GetBlockNumber": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockNumber",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockNumberRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockNumberRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockNumberResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockNumberResponse",
        "members": {
          "block_number": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockTimestamp": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockTimestamp",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockTimestampRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetBlockTimestampResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetBlockTimestampResponse",
        "members": {
          "block_timestamp": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetCallerAddress": {
        "full_name": "starkware.starknet.common.syscalls.GetCallerAddress",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetCallerAddressRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetCallerAddressRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetCallerAddressResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetCallerAddressResponse",
        "members": {
          "caller_address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetContractAddress": {
        "full_name": "starkware.starknet.common.syscalls.GetContractAddress",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetContractAddressResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetContractAddressRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetContractAddressRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetContractAddressResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetContractAddressResponse",
        "members": {
          "contract_address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetSequencerAddress": {
        "full_name": "starkware.starknet.common.syscalls.GetSequencerAddress",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetSequencerAddressRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetSequencerAddressResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetSequencerAddressResponse",
        "members": {
          "sequencer_address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxInfo": {
        "full_name": "starkware.starknet.common.syscalls.GetTxInfo",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetTxInfoResponse",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxInfoRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetTxInfoRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxInfoResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetTxInfoResponse",
        "members": {
          "tx_info": {
            "cairo_type": "starkware.starknet.common.syscalls.TxInfo*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxSignature": {
        "full_name": "starkware.starknet.common.syscalls.GetTxSignature",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
            "offset": 1
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxSignatureRequest": {
        "full_name": "starkware.starknet.common.syscalls.GetTxSignatureRequest",
        "members": {
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.GetTxSignatureResponse": {
        "full_name": "starkware.starknet.common.syscalls.GetTxSignatureResponse",
        "members": {
          "signature": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "signature_len": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.LIBRARY_CALL_L1_HANDLER_SELECTOR": {
        "type": "const",
        "value": 436233452754198157705746250789557519228244616562
      },
      "starkware.starknet.common.syscalls.LIBRARY_CALL_SELECTOR": {
        "type": "const",
        "value": 92376026794327011772951660
      },
      "starkware.starknet.common.syscalls.LibraryCall": {
        "full_name": "starkware.starknet.common.syscalls.LibraryCall",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.LibraryCallRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.CallContractResponse",
            "offset": 5
          }
        },
        "size": 7,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.LibraryCallRequest": {
        "full_name": "starkware.starknet.common.syscalls.LibraryCallRequest",
        "members": {
          "calldata": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "calldata_size": {
            "cairo_type": "felt",
            "offset": 3
          },
          "class_hash": {
            "cairo_type": "felt",
            "offset": 1
          },
          "function_selector": {
            "cairo_type": "felt",
            "offset": 2
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 5,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.REPLACE_CLASS_SELECTOR": {
        "type": "const",
        "value": 25500403217443378527601783667
      },
      "starkware.starknet.common.syscalls.ReplaceClass": {
        "full_name": "starkware.starknet.common.syscalls.ReplaceClass",
        "members": {
          "class_hash": {
            "cairo_type": "felt",
            "offset": 1
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.SEND_MESSAGE_TO_L1_SELECTOR": {
        "type": "const",
        "value": 433017908768303439907196859243777073
      },
      "starkware.starknet.common.syscalls.STORAGE_READ_SELECTOR": {
        "type": "const",
        "value": 100890693370601760042082660
      },
      "starkware.starknet.common.syscalls.STORAGE_WRITE_SELECTOR": {
        "type": "const",
        "value": 25828017502874050592466629733
      },
      "starkware.starknet.common.syscalls.SendMessageToL1SysCall": {
        "full_name": "starkware.starknet.common.syscalls.SendMessageToL1SysCall",
        "members": {
          "payload_ptr": {
            "cairo_type": "felt*",
            "offset": 3
          },
          "payload_size": {
            "cairo_type": "felt",
            "offset": 2
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          },
          "to_address": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageRead": {
        "full_name": "starkware.starknet.common.syscalls.StorageRead",
        "members": {
          "request": {
            "cairo_type": "starkware.starknet.common.syscalls.StorageReadRequest",
            "offset": 0
          },
          "response": {
            "cairo_type": "starkware.starknet.common.syscalls.StorageReadResponse",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageReadRequest": {
        "full_name": "starkware.starknet.common.syscalls.StorageReadRequest",
        "members": {
          "address": {
            "cairo_type": "felt",
            "offset": 1
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageReadResponse": {
        "full_name": "starkware.starknet.common.syscalls.StorageReadResponse",
        "members": {
          "value": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.StorageWrite": {
        "full_name": "starkware.starknet.common.syscalls.StorageWrite",
        "members": {
          "address": {
            "cairo_type": "felt",
            "offset": 1
          },
          "selector": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 2
          }
        },
        "size": 3,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.TxInfo": {
        "full_name": "starkware.starknet.common.syscalls.TxInfo",
        "members": {
          "account_contract_address": {
            "cairo_type": "felt",
            "offset": 1
          },
          "chain_id": {
            "cairo_type": "felt",
            "offset": 6
          },
          "max_fee": {
            "cairo_type": "felt",
            "offset": 2
          },
          "nonce": {
            "cairo_type": "felt",
            "offset": 7
          },
          "signature": {
            "cairo_type": "felt*",
            "offset": 4
          },
          "signature_len": {
            "cairo_type": "felt",
            "offset": 3
          },
          "transaction_hash": {
            "cairo_type": "felt",
            "offset": 5
          },
          "version": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 8,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.emit_event": {
        "decorators": [],
        "pc": 47,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.emit_event.Args": {
        "full_name": "starkware.starknet.common.syscalls.emit_event.Args",
        "members": {
          "data": {
            "cairo_type": "felt*",
            "offset": 3
          },
          "data_len": {
            "cairo_type": "felt",
            "offset": 2
          },
          "keys": {
            "cairo_type": "felt*",
            "offset": 1
          },
          "keys_len": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 4,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.emit_event.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.emit_event.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.emit_event.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.emit_event.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.emit_event.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.emit_event.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 6,
              "offset": 0
            },
            "pc": 47,
            "value": "[cast(fp + (-7), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 6,
              "offset": 1
            },
            "pc": 54,
            "value": "cast([fp + (-7)] + 5, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.get_caller_address": {
        "decorators": [],
        "pc": 24,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.get_caller_address.Args": {
        "full_name": "starkware.starknet.common.syscalls.get_caller_address.Args",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.get_caller_address.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.get_caller_address.Return": {
        "cairo_type": "(caller_address: felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.get_caller_address.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.get_caller_address.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 3,
              "offset": 0
            },
            "pc": 24,
            "value": "[cast(fp + (-3), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 3,
              "offset": 1
            },
            "pc": 27,
            "value": "cast([fp + (-3)] + 2, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.storage_read": {
        "decorators": [],
        "pc": 31,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.storage_read.Args": {
        "full_name": "starkware.starknet.common.syscalls.storage_read.Args",
        "members": {
          "address": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_read.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.storage_read.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_read.Return": {
        "cairo_type": "(value: felt)",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.storage_read.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.storage_read.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.storage_read.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 4,
              "offset": 0
            },
            "pc": 31,
            "value": "[cast(fp + (-4), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 4,
              "offset": 1
            },
            "pc": 35,
            "value": "cast([fp + (-4)] + 3, felt*)"
          }
        ],
        "type": "reference"
      },
      "starkware.starknet.common.syscalls.storage_write": {
        "decorators": [],
        "pc": 39,
        "type": "function"
      },
      "starkware.starknet.common.syscalls.storage_write.Args": {
        "full_name": "starkware.starknet.common.syscalls.storage_write.Args",
        "members": {
          "address": {
            "cairo_type": "felt",
            "offset": 0
          },
          "value": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 2,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_write.ImplicitArgs": {
        "full_name": "starkware.starknet.common.syscalls.storage_write.ImplicitArgs",
        "members": {
          "syscall_ptr": {
            "cairo_type": "felt*",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "starkware.starknet.common.syscalls.storage_write.Return": {
        "cairo_type": "()",
        "type": "type_definition"
      },
      "starkware.starknet.common.syscalls.storage_write.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "starkware.starknet.common.syscalls.storage_write.syscall_ptr": {
        "cairo_type": "felt*",
        "full_name": "starkware.starknet.common.syscalls.storage_write.syscall_ptr",
        "references": [
          {
            "ap_tracking_data": {
              "group": 5,
              "offset": 0
            },
            "pc": 39,
            "value": "[cast(fp + (-5), felt**)]"
          },
          {
            "ap_tracking_data": {
              "group": 5,
              "offset": 1
            },
            "pc": 44,
            "value": "cast([fp + (-5)] + 3, felt*)"
          }
        ],
        "type": "reference"
      },
      "utils.string.HashBuiltin": {
        "destination": "starkware.cairo.common.cairo_builtins.HashBuiltin",
        "type": "alias"
      },
      "utils.string._ascii_from_digit": {
        "decorators": [],
        "pc": 341,
        "type": "function"
      },
      "utils.string._ascii_from_digit.Args": {
        "full_name": "utils.string._ascii_from_digit.Args",
        "members": {
          "digit": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "utils.string._ascii_from_digit.ImplicitArgs": {
        "full_name": "utils.string._ascii_from_digit.ImplicitArgs",
        "members": {},
        "size": 0,
        "type": "struct"
      },
      "utils.string._ascii_from_digit.Return": {
        "cairo_type": "(ascii: felt)",
        "type": "type_definition"
      },
      "utils.string._ascii_from_digit.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "utils.string._recurse_ascii_array_from_number": {
        "decorators": [],
        "pc": 344,
        "type": "function"
      },
      "utils.string._recurse_ascii_array_from_number.Args": {
        "full_name": "utils.string._recurse_ascii_array_from_number.Args",
        "members": {
          "arr_ascii": {
            "cairo_type": "felt*",
            "offset": 2
          },
          "arr_ascii_len": {
            "cairo_type": "felt",
            "offset": 1
          },
          "remain": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 3,
        "type": "struct"
      },
      "utils.string._recurse_ascii_array_from_number.ImplicitArgs": {
        "full_name": "utils.string._recurse_ascii_array_from_number.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "utils.string._recurse_ascii_array_from_number.Return": {
        "cairo_type": "(arr_ascii_final_len: felt)",
        "type": "type_definition"
      },
      "utils.string._recurse_ascii_array_from_number.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "utils.string._recurse_ascii_from_ascii_array_inverse": {
        "decorators": [],
        "pc": 369,
        "type": "function"
      },
      "utils.string._recurse_ascii_from_ascii_array_inverse.Args": {
        "full_name": "utils.string._recurse_ascii_from_ascii_array_inverse.Args",
        "members": {
          "arr": {
            "cairo_type": "felt*",
            "offset": 2
          },
          "ascii": {
            "cairo_type": "felt",
            "offset": 0
          },
          "idx": {
            "cairo_type": "felt",
            "offset": 3
          },
          "len": {
            "cairo_type": "felt",
            "offset": 1
          }
        },
        "size": 4,
        "type": "struct"
      },
      "utils.string._recurse_ascii_from_ascii_array_inverse.ImplicitArgs": {
        "full_name": "utils.string._recurse_ascii_from_ascii_array_inverse.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "utils.string._recurse_ascii_from_ascii_array_inverse.Return": {
        "cairo_type": "(ascii_final: felt)",
        "type": "type_definition"
      },
      "utils.string._recurse_ascii_from_ascii_array_inverse.SIZEOF_LOCALS": {
        "type": "const",
        "value": 0
      },
      "utils.string.abs_value": {
        "destination": "starkware.cairo.common.math.abs_value",
        "type": "alias"
      },
      "utils.string.alloc": {
        "destination": "starkware.cairo.common.alloc.alloc",
        "type": "alias"
      },
      "utils.string.is_le": {
        "destination": "starkware.cairo.common.math_cmp.is_le",
        "type": "alias"
      },
      "utils.string.sign": {
        "destination": "starkware.cairo.common.math.sign",
        "type": "alias"
      },
      "utils.string.str": {
        "decorators": [],
        "pc": 298,
        "type": "function"
      },
      "utils.string.str.Args": {
        "full_name": "utils.string.str.Args",
        "members": {
          "num": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "utils.string.str.ImplicitArgs": {
        "full_name": "utils.string.str.ImplicitArgs",
        "members": {
          "range_check_ptr": {
            "cairo_type": "felt",
            "offset": 0
          }
        },
        "size": 1,
        "type": "struct"
      },
      "utils.string.str.Return": {
        "cairo_type": "(literal: felt)",
        "type": "type_definition"
      },
      "utils.string.str.SIZEOF_LOCALS": {
        "type": "const",
        "value": 2
      },
      "utils.string.unsigned_div_rem": {
        "destination": "starkware.cairo.common.math.unsigned_div_rem",
        "type": "alias"
      }
    },
    "main_scope": "__main__",
    "prime": "0x800000000000011000000000000000000000000000000000000000000000001",
    "reference_manager": {
      "references": [
        {
          "ap_tracking_data": {
            "group": 2,
            "offset": 0
          },
          "pc": 9,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 2,
            "offset": 3
          },
          "pc": 16,
          "value": "[cast(ap, felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 3,
            "offset": 0
          },
          "pc": 24,
          "value": "[cast(fp + (-3), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 4,
            "offset": 0
          },
          "pc": 31,
          "value": "[cast(fp + (-4), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 5,
            "offset": 0
          },
          "pc": 39,
          "value": "[cast(fp + (-5), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 6,
            "offset": 0
          },
          "pc": 47,
          "value": "[cast(fp + (-7), felt**)]"
        },
        {
          "ap_tracking_data": {
            "group": 7,
            "offset": 0
          },
          "pc": 57,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 8,
            "offset": 0
          },
          "pc": 62,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 10,
            "offset": 0
          },
          "pc": 71,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 10,
            "offset": 0
          },
          "pc": 71,
          "value": "[cast([fp + (-4)], felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 10,
            "offset": 0
          },
          "pc": 71,
          "value": "[cast([fp + (-4)] + 1, felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 11,
            "offset": 0
          },
          "pc": 84,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 11,
            "offset": 1
          },
          "pc": 86,
          "value": "[cast(ap + (-1), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 12,
            "offset": 0
          },
          "pc": 99,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 12,
            "offset": 1
          },
          "pc": 109,
          "value": "[cast(ap + (-1), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 13,
            "offset": 0
          },
          "pc": 127,
          "value": "[cast(fp + (-4), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 13,
            "offset": 0
          },
          "pc": 127,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 13,
            "offset": 0
          },
          "pc": 127,
          "value": "[cast([fp + (-5)], felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 13,
            "offset": 0
          },
          "pc": 127,
          "value": "[cast([fp + (-5)] + 1, felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 14,
            "offset": 0
          },
          "pc": 142,
          "value": "[cast(fp + (-3), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 14,
            "offset": 1
          },
          "pc": 144,
          "value": "[cast(ap + (-1), felt*)]"
        },
        {
          "ap_tracking_data": {
            "group": 14,
            "offset": 2
          },
          "pc": 162,
          "value": "[cast(ap + (-1), felt*)]"
        }
      ]
    }
  }
}